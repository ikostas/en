<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>The Real Changes - blog</title><link href="https://en.kovchinnikov.info/" rel="alternate"></link><link href="https://en.kovchinnikov.info/feeds/blog.atom.xml" rel="self"></link><id>https://en.kovchinnikov.info/</id><updated>2024-05-16T19:18:00+02:00</updated><subtitle>Konstantin Ovchinikov's personal page</subtitle><entry><title>We're writing a web app</title><link href="https://en.kovchinnikov.info/2024-05-webapp.html" rel="alternate"></link><published>2024-05-16T19:18:00+02:00</published><updated>2024-05-16T19:18:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2024-05-16:/2024-05-webapp.html</id><summary type="html">&lt;p&gt;Learning web apps from a historical perspective&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Why write a web app &amp;#35;1&lt;/h2&gt;
&lt;p&gt;I wrote a lot about learning Linux tools and using them effectively. The question is what do we do with that? Or: what's next regarding personal development? What I've noticed, is that a lot of people tend to go into system administration, meaning setting up server applications. Here I should mention &lt;a href="https://www.ubuntupit.com/"&gt;UbuntuPit&lt;/a&gt; as a great source for these projects. This path has a few drawbacks, although it's useful for learning what exists:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You are limited to the tools which are already available&lt;/li&gt;
&lt;li&gt;It can be frustrating because if it doesn't work, you're stuck; you're unable to modify the source code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think learning programming is beneficial regarding personal development, having new challenges, and so on. But why create a web app?&lt;/p&gt;
&lt;h2&gt;Why write a web app &amp;#35;2&lt;/h2&gt;
&lt;p&gt;For simplicity, we can distinguish the two app types: those intended for individual use and those intended for collaborating with others. It tends that people are hugely more productive when they collaborate (no, I don't mean boring Zoom meetings), while personal productivity is limited. If we have a new app, the more people use it, the more productive, potentially, they can get. So what types of apps exist to interact with each other:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Command-line apps (CLI) are the easiest to write, and are fun to start with, but the visualization is limited&lt;/li&gt;
&lt;li&gt;Graphical desktop apps are great, but you (normally) need special tools for Linux, Mac and Windows&lt;/li&gt;
&lt;li&gt;Mobile apps have several platforms as well, Android and iOS&lt;/li&gt;
&lt;li&gt;The web apps, finally&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The web apps are displayed in any standard-conformant browser, but they can also have a special mobile layout and they can be converted to mobile apps (or lite mobile apps) &amp;ndash; being a mobile app, just cashing the assets for a faster display. At first, we could start even without that, and we'll be able to open our web app on any platform in any browser when the app and the browser stick to the standards. It motivated me to start, but to manage your expectations you should be probably aware of some drawbacks.&lt;/p&gt;
&lt;h2&gt;Why it's hard&lt;/h2&gt;
&lt;p&gt;It's just hard to make web apps, and the list of the reasons can be very long:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The tools to build web apps are less sophisticated, than IDEs for mobile or desktop apps. Sometimes it seems like you're back in time and you don't have the tools desktop developers already have. Nevertheless, you can start development with any text editor and it takes some practice to feel comfortable in this environment.&lt;/li&gt;
&lt;li&gt;Web dev is not so much about dev. You have three parts (normally): a front-end, a back-end, and a database. You'll spend a lot of time messing with joining these parts together and looking for errors 'in-between'. Sometimes you'll find yourself spending 80% of your time creating front-end because it's all about tiny details. So, you have less time for the logic of the app.&lt;/li&gt;
&lt;li&gt;The number of web frameworks is overwhelming, and it took me several months to choose one (so you don't have to), and I'm still in the process.&lt;/li&gt;
&lt;li&gt;Choosing components for the front end, choosing a database engine, and choosing a back-end framework can be overwhelming too.&lt;/li&gt;
&lt;li&gt;All this makes the progress relatively slow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's not that technically hard, but it puts a moral toll on you when you're moving not that fast or (what I did several times) you have to choose another framework for your app and rewrite everything.&lt;/p&gt;
&lt;p&gt;The tools you have, again for simplicity, can be divided into the things you can easily get without and the things you should know. But in what order to learn them? Well, ...&lt;/p&gt;
&lt;h2&gt;Learning the web from a historical perspective&lt;/h2&gt;
&lt;p&gt;I came to this idea recently, and I think it makes some sense: you could learn web technologies in the order they evolved because that happened for a reason. A reason for that was that humanity (or developers) came to some limitations with technology, so they invented a new technology until they had a better idea. I suggest that you learn in this order and the sign that you learned something is that you &lt;strong&gt;feel&lt;/strong&gt; the limitations of a technology. This means you are probably ready for the next step.&lt;/p&gt;
&lt;p&gt;Roughly speaking, the sequence was like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Static web meaning HTML and CSS, are the basics.&lt;/li&gt;
&lt;li&gt;Relational databases meaning SQL.&lt;/li&gt;
&lt;li&gt;Basic back-end framework, here I was quite happy to start with &lt;a href="https://flask.palletsprojects.com/"&gt;Flask&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Opionated back-end framework, which gives you at least a variant, of how this could be done. I'm here now and I'm starting to feel the limits of &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Non-opinionated modern back-end framework, it seems that &lt;a href="https://expressjs.com/"&gt;Express JS&lt;/a&gt; is quite popular, and I'm targeting it now.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There are a lot of things like React/Angular/Vue or Next.js/Nuxt.js, I just don't understand what limitations would make me use them. Generally maintaining focus and taking one step at a time is a good idea, from my experience, for the reason I've already mentioned: the number of frameworks is overwhelming. And there's a bit of hype, too.&lt;/p&gt;
&lt;h2&gt;What I've learned so far&lt;/h2&gt;
&lt;p&gt;I'll go through the same list from the previous section to note my conclusions and let a lot of people laugh at them. :)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Static means you can't change anything, but when you generate the static code on the server it's generally more stable, just because the client side is simple. Unless you need an interactive app like a game or an interactive map, you can go further with HTML and CSS. There are plenty of ready CSS styles as well.&lt;/li&gt;
&lt;li&gt;SQL databases are great when you understand what's going on. If you can model a data structure beforehand, I see no drawbacks, although I get the idea that NoSQL databases speed up the development. I'm just old, so I stick to SQL. Some frameworks have tools to write platform-independent SQL, I'm also happy to use that.&lt;/li&gt;
&lt;li&gt;I was stuck with Flask and the authentication task. The number of modules you have to find and include is a bit overwhelming just to do the basic things. It blurs a bit the whole picture of what's going on, but maybe it's a perfect place to start because you get the basics without too complicated concepts and you get a result fast.&lt;/li&gt;
&lt;li&gt;I'm working with a calendar app, and now the idea of having a very limited language in the templates doesn't feel right. Yes, you could use Django as an API for a front-end app, but I was eager to leverage all of its advantages, fast models and fast templates being among them.&lt;/li&gt;
&lt;li&gt;When you step on JS and Express territory, you again have to choose the modules and you also feel the absence of documentation, compared to pythonic tools and specifically Django. It sucks, but there's a reason it's so popular, and it's interesting to find it out, so my journey continues.&lt;/li&gt;
&lt;/ol&gt;</content><category term="blog"></category><category term="dev"></category><category term="productivity"></category><category term="python"></category></entry><entry><title>A few maturity models</title><link href="https://en.kovchinnikov.info/2024-04-maturity.html" rel="alternate"></link><published>2024-04-25T22:33:00+02:00</published><updated>2024-04-25T22:33:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2024-04-25:/2024-04-maturity.html</id><summary type="html">&lt;p&gt;Maturity models for Sales&amp;amp;Marketing, Project Management Office and digitalization&lt;/p&gt;</summary><content type="html">&lt;p&gt;The story of the Capability Maturity Model started, according to Wikipedia, in 1986 with the U.S. Department of Defense. Since then a CMM institute was established and several models were developed.&lt;/p&gt;
&lt;p&gt;I found it useful to develop a model for a particular area with a subject matter expert and apply it, answering the Three Main Questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Where are we?&lt;/li&gt;
&lt;li&gt;Where are we heading to?&lt;/li&gt;
&lt;li&gt;How do we get there?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It's important to understand that the criteria in the model are not comprehensive, but rather indicative. It's also important, that the model defines absolute levels, so it should be updated as new practices emerge. The levels themselves can be depicted using the radar chart, which many top managers from my experience find intuitive and easy to understand. So, I decided to publish the following models:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="pdf/s3m.pdf"&gt;Sales Maturity Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="pdf/p3m.pdf"&gt;Project Management Maturity Model&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="pdf/dmm.pdf"&gt;Digitalization Maturity Model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Special thanks to the people, who helped me a lot with my development effort:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Andrey Malakhov for Project Management Maturity Model&lt;/li&gt;
&lt;li&gt;Ekaterina Mityasova for Sales Maturity Model&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;p&gt;Please remember to put a link to this website as a source, if you use it.&lt;/p&gt;</content><category term="blog"></category><category term="maturity"></category><category term="sales"></category><category term="digitalization"></category><category term="project management"></category></entry><entry><title>Python/Django development in Windows Terminal</title><link href="https://en.kovchinnikov.info/2024-04-wsl-python.html" rel="alternate"></link><published>2024-04-06T11:49:00+02:00</published><updated>2024-04-06T11:49:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2024-04-06:/2024-04-wsl-python.html</id><summary type="html">&lt;p&gt;A minimal development environment for those who prefer a terminal&lt;/p&gt;</summary><content type="html">&lt;p&gt;Well, I decided to write a small Django app, and as Windows is used at our workplaces and I've gotten used to linux, two problems arose:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You need to call admin every time you install any program&lt;/li&gt;
&lt;li&gt;WSL is rather limited&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, after some tinkering, tries, and errors I came to a minimal configuration, which I'll describe in this article. Hope, it helps someone somehow. :) I'm also new to programming and Django in particular, so it took me a while to find an optimal setup.&lt;/p&gt;
&lt;p&gt;My requirements are very simple:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Terminal-based workflow&lt;/li&gt;
&lt;li&gt;A few steps to setup&lt;/li&gt;
&lt;li&gt;Reproducible, if something goes wrong&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I ended up with the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu in WSL2, just the default&lt;/li&gt;
&lt;li&gt;Windows Terminal, why not&lt;/li&gt;
&lt;li&gt;tmux is used with two or three windows: neovim, runserver, find something/look in the database&lt;/li&gt;
&lt;li&gt;neovim + &lt;a href="https://github.com/nvim-lua/kickstart.nvim"&gt;kickstart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python 3 + pip, nothing special&lt;/li&gt;
&lt;li&gt;GitHub Projects to have a task list&lt;/li&gt;
&lt;li&gt;git to track versions when I complete a task&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the current project I use SQLite, but it shouldn't be an issue with any other database.&lt;/p&gt;
&lt;p&gt;The only thing worth discussing here is neovim, so let's dive into that.&lt;/p&gt;
&lt;p&gt;First I tried emacs-nox as I use emacs for writing texts. But for programming emacs is too much with its functions, and windows management becomes a problem as well: it creates lots of service buffers. On the other hand, neovim + Telescope is a nice solution for windows management, neovim has just the functions I need for editing, so it's a lot easier to get into the 'flow state' for programming.&lt;/p&gt;
&lt;p&gt;By the way, I don't use a language server for Python, but I use an emmet language server to write HTML faster. I don't use LSP for Python just because I learn Django and Python and I need first of all to understand, so I look into documentation and try to write when I'm sure what I'm doing. Django requires writing very little text, but switching between (or having them on one screen) models, forms, urls, and views is critical. And neovim does that pretty well.&lt;/p&gt;
&lt;p&gt;Again, due to WSL limitations, I was able to use neovim binary only from the official site: AppImage didn't work for me. And you need a fresh neovim version for Lazy, which is used by kickstart.&lt;/p&gt;
&lt;p&gt;You can find great ways to use tmux and also bind neovim and tmux together, I just keep it simple.&lt;/p&gt;
&lt;p&gt;Someone could use docker, but Python's virtual environment works pretty well for me, I was able to copy it to the linux machine, mostly with &lt;code&gt;pip freeze&lt;/code&gt; and &lt;code&gt;pip install -r&lt;/code&gt;. And the app just works.&lt;/p&gt;</content><category term="blog"></category><category term="python"></category><category term="vim"></category></entry><entry><title>My new old 3d-printer</title><link href="https://en.kovchinnikov.info/2024-04-3d-printer.html" rel="alternate"></link><published>2024-04-01T12:12:00+02:00</published><updated>2024-04-01T12:12:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2024-04-01:/2024-04-3d-printer.html</id><summary type="html">&lt;p&gt;Some positive personal experience&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Year 2024: Core-XY printers took over the world. They are quick, but they are also big and loud. What should a normal dude like me do just get into 3D printing and not suffer so much? Notably, I suffer from poor quality and from the printer being unstable.&lt;/p&gt;
&lt;p&gt;For the cheap printers tier, Creality V3 SE or V3 KE seems to be the obvious choice, but they have problems not so many people talk about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The print plate is always bent&lt;/li&gt;
&lt;li&gt;Aluminium frame may not survive the assembly and it's hard to make it stable again&lt;/li&gt;
&lt;li&gt;They are supplied with some screwed software and you need to put some effort to get profiles for these printers in the slicer you want&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creality Ender V3 seems to be better, but it's also more expensive. Creality CR-10 has problems with layers in all the reviews.&lt;/p&gt;
&lt;p&gt;By the way, Qidi Tech Smart X3 is a small Core-XY printer with a relatively low price, but... there are not so many positive reviews, some questions regarding non-replaceable carbon rods, and... it's not available in the EU. And this can be for a reason: in the EU the law protects the customers, so when the quality of the product is poor, the manufacturers prefer to exit this market.&lt;/p&gt;
&lt;p&gt;You can say, that there's Bambu Lab A1 Mini. When I was choosing a printer, it wasn't available without AMS Lite, which I don't need. I also have some questions regarding the construction and the approach of the company in general: closed-source, not friendly for tinkering or customization. Well, it's something different: it's completely hostile to these kind of things. And I'm not going to vote with my money for this approach.&lt;/p&gt;
&lt;p&gt;For lots of other manufacturers, the problems are the same as for Creality: print plates are bent and the software support is awful.&lt;/p&gt;
&lt;h2&gt;The requirements&lt;/h2&gt;
&lt;p&gt;The print volume is a good question. I printed some models and I needed this print volume only twice. In one case I could buy a laptop on Amazon. I thought even about Voron 0.2, but a 120x cube seems too little. I thought I could live with a 180x cube.&lt;/p&gt;
&lt;p&gt;I also wanted the printer to be stable in terms of print quality, quick, and silent. The last two characteristics are contradicting. Well, they start to contradict when the printer pushes speed too much. But you need good engineering, good quality parts, and anti-shaping technology, ideally with sensors on the printer.&lt;/p&gt;
&lt;p&gt;I thought about Sovol SV 06, but you need to replace some parts right away. And the print quality I saw on videos by the guys who did it, still sucked. And it just seems irrational to me to pay for the parts that go right into the bin.&lt;/p&gt;
&lt;p&gt;Some more bad candidates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I had experience with AnyCubic, which is still alive. It's loud and the engineering is just anti-humane, which results in unstable and often bad print quality.&lt;/li&gt;
&lt;li&gt;AnkerMake... just take a look at their group on Reddit... it is full of complains&lt;/li&gt;
&lt;li&gt;FlashForge... again, awful software and lots of questions regarding the electrical safety of these devices&lt;/li&gt;
&lt;li&gt;Neptune printers have problems with geometry, they are just not square, just as the prints they produce &lt;/li&gt;
&lt;li&gt;The 100 is a great project, but it requires sourcing and assembly... and some special tools which also cost a few hundred euros&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Prusa&lt;/h2&gt;
&lt;p&gt;OK, what about Prusa? These printers are expensive, they say. Is it the only drawback? If it is, I can live with that. You can find some negative reviews about Prusa Mini, but the current model is called Prusa Mini+, it also has firmware upgrades, and Prusa Slicer took a long path as well. And the fact is that Prusa Mini was used on lots of print farms. Now many print enthusiasts have replaced it with BambuLab Core-XY printers. Does it make Prusa Mini+ a bad printer? I don't think so. There are lots of advantages of small print volume:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's energy efficient as the heated table is small&lt;/li&gt;
&lt;li&gt;The construction has worked well for this volume&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The approach here's the following: you can fully disassemble, service, and assemble the printer yourself. As it's not new on the market, there are plenty of upgrades available for cheap. For example, it uses a standard v6 nozzle, you can buy 8 of them for 14 EUR and they will be made of hardened steel.&lt;/p&gt;
&lt;h2&gt;My experience&lt;/h2&gt;
&lt;p&gt;First, I should put a disclaimer, my printer came with some upgrades and I can't say anything about how the printer works without them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The heat block&lt;/li&gt;
&lt;li&gt;The Bondtech extruder he he he&lt;/li&gt;
&lt;li&gt;A printed stabilizer for the Z-axis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The problem was that the previous owner tried to print with nylon, and this material was in the heatsink, on the heatblock, and it clogged my new nozzle. So I ended up changing the heatsink and the nozzle again and warming up and cleaning the heat block. It took 1 evening and after that it was fine. And the previous owner sent lots of spare parts to me, including the upgrades.&lt;/p&gt;
&lt;p&gt;But it started with assembly as my printer came partially disassembled. Here's the question for those who say that it costs too much: Do great assembly instructions with photos cost anything? I think they do and I was able to assemble the printer and after that change the nozzle, although I've never done it before. I needed only hex wrenches for that. I also lubed the bearings and checked the belts and all the bolts. And after that I can say, that the engineering of this printer is great, because it's simple.&lt;/p&gt;
&lt;p&gt;Is it silent? It is until it gets to full speed, but the noise comes mostly from the print head. The print quality is great and stable. More than that, often I print with 15% infill, so I use less material.&lt;/p&gt;
&lt;p&gt;Regarding the print speed, I have another dirty secret for those who don't know: if you want speed, just install a bigger nozzle.&lt;/p&gt;
&lt;p&gt;The guys who paid for these great Core-XY machines often write the same thing: it's overkill, I printed all I wanted and I don't know what else to print. That's the power of marketing, folks. These Core-XY machines are nice, but you bought them although you didn't need them. My printer is just good enough for the tasks I have, small enough to fit right on my table, silent enough, and still quick enough.&lt;/p&gt;</content><category term="blog"></category><category term="3d-printing"></category></entry><entry><title>A dive into 3D-printing</title><link href="https://en.kovchinnikov.info/2023-10-3d-printing.html" rel="alternate"></link><published>2023-10-29T12:18:00+01:00</published><updated>2023-10-29T12:18:00+01:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-10-29:/2023-10-3d-printing.html</id><summary type="html">&lt;p&gt;My story and some conclusions&lt;/p&gt;</summary><content type="html">&lt;h2&gt;My story&lt;/h2&gt;
&lt;p&gt;It all started when my friend found a 3D printer on the street with lots of filament rolls. Here in Germany, people put stuff right on the street when they move to another apartment or when they don't need it. I decided to take a look:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I made a photo and googled by image; it happened to be &lt;a href="https://www.anycubic.com/products/anycubic-i3-mega"&gt;Anycubic M3 Mega&lt;/a&gt;, an old printer.&lt;/li&gt;
&lt;li&gt;The bed was covered with filament, I cleaned it and found that it was damaged, probably due to a lack of bed leveling, so I ordered a bad replacement, for 20 &amp;euro;. I leveled the bed and was able to print a mic stand, as my mic stand was broken.&lt;/li&gt;
&lt;li&gt;I found a new &lt;a href="https://github.com/davidramiro/Marlin-Ai3M"&gt;custom firmware for this printer&lt;/a&gt;, which had great features: 25-point manual bed leveling, auto nozzle, and bed calibration, which significantly reduced the noise and probably power consumption as well. It printed, but then the filament didn't stop leaking, so I ordered print nozzles made of hardened steel, 15 &amp;euro; for a pack of 8.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I leveled the bed again and... it printed great! Well, after lots of prints, I found the drawbacks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For sure it's slow and loud&lt;/li&gt;
&lt;li&gt;The construction which is advertised as "hardened Ender" sucks, especially filament sensor placement&lt;/li&gt;
&lt;li&gt;The quality sucks, it has issues with &lt;a href="https://www.youtube.com/watch?v=BMqLe_tQEVA&amp;amp;t=197s"&gt;the extruder&lt;/a&gt; and the motion system; it's rough&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Still, I was excited, because I was able to print lots of useful and entertaining prints. For prints without details draft quality works well and is almost 2x faster. If you struggle with the question "What to print?", there are two main categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Something useful like clips, organizers, stands&lt;/li&gt;
&lt;li&gt;Something entertaining like anime figures, decorations&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;It's time to move on&lt;/h2&gt;
&lt;p&gt;This particular printer could be upgraded with Klipper, so at least you need Banana Pi and some soldering. Then it probably will be able to print 2x faster with a better quality. I don't think this printer is worth it. More than that, some research revealed that lots of YouTubers (at least) have this printer, but no one is excited about it. I guess that they all experience issues with the quality.&lt;/p&gt;
&lt;p&gt;The next step to go further with 3D printing is to start 3D modeling myself, I have some ideas to make fastenings on my bike. I was shocked at how many models are available online for free, you can spend ages digging through these catalogs.&lt;/p&gt;
&lt;h2&gt;Current market for 3d printers&lt;/h2&gt;
&lt;p&gt;I'd like to change the printer itself and it happened that although FDM printing is old, a few things have happened recently in this market.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It all started with Bambu Lab x1, followed by more affordable P1P and smaller, but even more affordable A1 mini. I was able to launch their &lt;a href="https://github.com/bambulab/BambuStudio/releases"&gt;slicer in Linux&lt;/a&gt;, but they have really &lt;a href="https://www.youtube.com/watch?v=Neakuea_uBY&amp;amp;t=1431s"&gt;weird user agreement&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Other companies also decided to make a fast CoreXY printer, but all of them suck: &lt;a href="https://www.reddit.com/r/klippers/comments/134lh7s/comment/jin81g0/?utm_source=reddit&amp;amp;utm_medium=web2x&amp;amp;context=3"&gt;Qidi Smart3&lt;/a&gt;, &lt;a href="https://www.reddit.com/r/FlashForge/comments/17aozng/adventurer_5m_in_stock/"&gt;Flashforge Adventurer 5M&lt;/a&gt;, Creality K1. But Creality stands out as they fix the issues and finally, they came out with the full version of Klipper.&lt;/li&gt;
&lt;li&gt;Some companies came out with fast sling-bed printers: Neptune 4 Pro &lt;a href="https://www.youtube.com/watch?v=-rlOoGLZdoo&amp;amp;t=5s"&gt;can't print the cylinder&lt;/a&gt; and AnkerMake M5C needs a mobile app to operate, also tinkering is minimized: all the contacts are glued.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I also learned about Voron printers and THE 100. They need some tools to build worth 170 &amp;euro;. And I'm not sure that I'll cope with the assembly and will finish the tuning.&lt;/p&gt;
&lt;p&gt;Everyone is so excited about fast printing, but it comes at a cost: it's always noisy (and costly). Other than speed, some great models are still available on the market. I mean Creality Ender 3 V3 SE and Creality Ender 5 S1. I'm thinking about buying one of them, and after that maybe add Klipper with Orange Pi or something, which also allows to print using WiFi. Ender is more like evolution, rather than revolution. And it's not only about the community, lots of replacement and upgrade parts are available. It's not about the first print, it's about printing for some time, which requires some service. I'd also like to have a working printer out of the box, and then maybe gradually upgrade it. Becase printing is fun!&lt;/p&gt;</content><category term="blog"></category><category term="3d-printing"></category></entry><entry><title>Taking Emacs and Neovim to the next level</title><link href="https://en.kovchinnikov.info/2023-08-vim-emacs.html" rel="alternate"></link><published>2023-08-16T22:56:00+02:00</published><updated>2023-08-16T22:56:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-08-16:/2023-08-vim-emacs.html</id><summary type="html">&lt;p&gt;New requirements with the start of web app development&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The story&lt;/h2&gt;
&lt;p&gt;I was quite content with Emacs, especially with Markdown and Org modes. But then I started to develop a web application, and it became obvious, that a standard Emacs sucks in many ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Switching between buffers, the order of the buffers always changes&lt;/li&gt;
&lt;li&gt;Moving through the text and editing files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The answer to the first issue can be a fuzzy finder, regarding the second issue the answer is called modal editing which is impemented in Vim, notably. Emacs has several advantages, though:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Highly intellectual editing, most of all I like editing links and tables in Org and Markdown modes&lt;/li&gt;
&lt;li&gt;Very good 'monolythic' modes for any language&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to use these advantages, you could install... a few more modes. But in this article I'd like to look further. Maybe we could use Neovim or some other editor for programming? Before we start, I'd like to mention a few points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you start from scratch, maybe &lt;a href="2022-09-linux-5.html"&gt;the first article about Vim and Emacs configs&lt;/a&gt; could be useful for you&lt;/li&gt;
&lt;li&gt;I created &lt;a href="https://github.com/ikostas/misc/"&gt;a git repo with my configs&lt;/a&gt;, for reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Emacs&lt;/h2&gt;
&lt;p&gt;First, we activate &lt;a href="https://docs.projectile.mx/projectile/index.html"&gt;projectile&lt;/a&gt; to be able to navigate within the project:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;projectile-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;+1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;define-key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;projectile-mode-map&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kbd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C-c p&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;projectile-command-map&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we activate &lt;a href="https://www.masteringemacs.org/article/introduction-to-ido-mode"&gt;ido&lt;/a&gt;, which a fuzzy finder. You could use &lt;a href="https://tuhdo.github.io/helm-intro.html"&gt;helm&lt;/a&gt; as well, by the way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ido-enable-flex-matching&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ido-everywhere&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ido-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ido-ignore-buffers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\\` &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;^\*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ido-ignore-files&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;^\#&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;\~$&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I added some lines to ignore backup files Emacs creates. And we also make ibuffer default:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;defalias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;list-buffers&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;ibuffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we are ready to activate evil-mode, which emulates Vim:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;evil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;evil-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And jumping between lines is easier with relative numbers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;display-line-numbers-type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;relative&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;"It ain't much, but it's honest work." &amp;copy; I still don't feel comfortable though.&lt;/p&gt;
&lt;h2&gt;Neovim&lt;/h2&gt;
&lt;p&gt;What are Neovim's super-powers? I think, &lt;a href="https://github.com/nvim-treesitter/nvim-treesitter"&gt;tree sitter&lt;/a&gt; and &lt;a href="https://github.com/nvim-telescope/telescope.nvim"&gt;telescope&lt;/a&gt; are among them. You could also turn on LSP, but I try to learn programming without it.&lt;/p&gt;
&lt;p&gt;I used vim a lot, but I can't get rid of a thought that it's not logical. You could change the keystrokes, but I mean the deeper logic for the editor, it feels that it's just absent sometimes. Could it be better?&lt;/p&gt;
&lt;p&gt;And I also have some doubts regarding Emacs. Do we really need a Lisp environment just to write texts? Doesn't it get bloated with all that extensions? Evil mode works quite well, but does it seem alien to the whole logic of Emacs?&lt;/p&gt;
&lt;p&gt;Could we have just a simple editor, maybe lacking some features, but with a more holistic approach? An editor, which would not require to search for plugins and install them and then finding where these plugins conflict with each other? Maybe an editor, which could be written with modern achievement like language and the whole idea of modern text editing and writing programs?&lt;/p&gt;
&lt;p&gt;Well, if you don't need LSPs and modal editing, maybe you could go with &lt;a href="https://micro-editor.github.io/"&gt;micro&lt;/a&gt;. It has themes and plugins.&lt;/p&gt;
&lt;h2&gt;Bonus: helix&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://helix-editor.com/"&gt;Helix&lt;/a&gt; has been there for a while, and &lt;a href="https://www.youtube.com/watch?v=xHebvTGOdH8"&gt;this video&lt;/a&gt; includes a good explanation of differences with vim. It doesn't explain though, that helix lacks some features, like jumping between sentences (maybe because it's a programming editor, first of all), and it lacks snippets. But based on idea &lt;a href="https://www.youtube.com/shorts/Ev1n7y_RVOE"&gt;in this video&lt;/a&gt; even a looser like me can write &lt;a href="https://github.com/ikostas/misc/blob/main/sn"&gt;a bash script&lt;/a&gt; to insert some HTML and Markdown. After using it for a while, I have some thoughts to share:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's more logical, than vim, and 'modes' are just to explain the logic behind the keystrokes&lt;/li&gt;
&lt;li&gt;I struggle switching from vim with some keystrokes, especially 'x', which is 'select line' in helix&lt;/li&gt;
&lt;li&gt;It's great that's it rather simple, so you don't get too frustrated studing it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With all that said, it's a lot of fun editing files in Helix. As a user I can't say how the fact that's it's written in Rust makes it better, I don't think Emacs is slow, although it's been criticised for that. It's more user-friendly, than Emacs, and a lot user-friendly, than vim, but these friendly features don't prevent you from beeing fast and highly effective. If you don't need information in these pop-ups, you could just ignore them and nothing will happen.&lt;/p&gt;
&lt;p&gt;If you use tmux, don't forget to put this into your tmux.config:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;sg escape&lt;span class="p"&gt;-&lt;/span&gt;time &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="blog"></category><category term="productivity"></category><category term="vim"></category><category term="emacs"></category></entry><entry><title>Learning German</title><link href="https://en.kovchinnikov.info/2023-08-german.html" rel="alternate"></link><published>2023-08-07T20:43:00+02:00</published><updated>2023-08-07T20:43:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-08-07:/2023-08-german.html</id><summary type="html">&lt;p&gt;Based on my own experience, some tips included&lt;/p&gt;</summary><content type="html">&lt;p&gt;First, I need to start with a few disclaimers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I learned English (for 30 years), Spanish (for 4 years in the school) and French (4 years in the institute), so my experience with German is subjective because of that;&lt;/li&gt;
&lt;li&gt;I chose Lingoda as the main way of learning, and although I like it, this article is about why you &lt;strong&gt;shouldn't&lt;/strong&gt; stick to Lingoda only;&lt;/li&gt;
&lt;li&gt;I'm not affiliated with Lignoda, I pay for my learning myself, but you can find a link to save 50 USD if you join the sect; :)&lt;/li&gt;
&lt;li&gt;With Lingoda I completed 50 lessons from A&amp;nbsp;1.2 course and started A&amp;nbsp;2.1 course recently;&lt;/li&gt;
&lt;li&gt;I'm not always satisfied with Lingoda, but it's beyond the scope of this particular article; instead, I'll share my thoughts on Lingoda's limits.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With all this in mind, let's start! In this post I'm going to share some thoughts regarding the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What makes German complicated and how to deal with it&lt;/li&gt;
&lt;li&gt;What structure do you need to study a language&lt;/li&gt;
&lt;li&gt;What particular tools you can use to study German&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the end, I'll provide some hints to ease the learning process.&lt;/p&gt;
&lt;h2&gt;German is complicated&lt;/h2&gt;
&lt;p&gt;I underestimated the extent, to which German is difficult, so it requires, in my mind, way more time and patience to master it. When you start, everything seems simple, even articles (definite/indefinite), conjugations, and declinations are not that hard. The problem is that when you speak, you need to think about all the rules at once:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pronunciation&lt;/li&gt;
&lt;li&gt;Choosing an article (or no article)&lt;/li&gt;
&lt;li&gt;Declination&lt;/li&gt;
&lt;li&gt;Conjugation&lt;/li&gt;
&lt;li&gt;Word order, which is very different from other languages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hypothesize that Germans just don't do it &amp;ndash; instead, they remember the templates. And remembering the templates is a good way to learn any language. Still, pronunciation rules help a lot. To my surprise teacher, which are native German speakers, were not able to tell these rules. And these rules were absent in the book we had on my first learning course. I found these rules in a book called 'German Demystified'. You read one page and you start to read properly.&lt;/p&gt;
&lt;p&gt;The way all the other topics are explained differs &lt;strong&gt;a lot&lt;/strong&gt; in various books and guides. My choice is the same book mentioned above because I like the way it's explained in plain English. Regretfully, I found very few explanations on grammar in the Lingoda course. &lt;/p&gt;
&lt;p&gt;So, it's a lot about grammar: the learning process, speaking and understanding German. Pronunciation is still hard, but we'll deal with it.&lt;/p&gt;
&lt;h2&gt;A structure to learn a language&lt;/h2&gt;
&lt;p&gt;So, let's talk about the target structure you need to master the language. In my opinion, you need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Talk&lt;/li&gt;
&lt;li&gt;Write&lt;/li&gt;
&lt;li&gt;Understand&lt;/li&gt;
&lt;li&gt;Learn grammar&lt;/li&gt;
&lt;li&gt;Learn vocabulary&lt;/li&gt;
&lt;li&gt;Have a feedback&lt;/li&gt;
&lt;li&gt;Have a roadmap&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By each activity I mean the process, when at the beginning you are not able to do it, and at the end you can do it for sure. It's not like you visited some class, where the teacher explained grammar, but you didn't get it. So, we need a &lt;strong&gt;result&lt;/strong&gt;, and a result requires investing some time in each activity and implementing the proper process. So, what is the proper process?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To talk the best thing is story-telling. If you tell a story to your neighbor in German, that's it! You can find a native speaker through the app or take the courses. With the app I assume that the native speaker will be interested from the B1 level, otherwise it hurts. With the courses, the idea is to take every opportunity to speak. While you are not fluent, just repeating podcasts in German helps a lot.&lt;/li&gt;
&lt;li&gt;To write is to have enough writing exercises to make use of your muscle memory. I think that Lingoda does not have enough written exercises, but you can look for other resources. I found exercises in the same book I mentioned above, you can also find exercises online. The idea is to write full sentences by hand or type them, not just to fill in the gaps.&lt;/li&gt;
&lt;li&gt;Listening to podcasts, music, news, and watching movies in the target language helps a lot. At first, it's hard, but then there's a moment like: "Oh, I can understand 60%". And the only way to get there is to start and do it regularly.&lt;/li&gt;
&lt;li&gt;I don't believe that anyone learns grammar after oral explanations. I know, for example, that the human brain has two modes: communication and deep thinking, needed for learning. So I strongly believe that only studying written explanations of grammar helps, along with the written exercises, to apply the knowledge and convert remembered information into knowledge.&lt;/li&gt;
&lt;li&gt;To learn vocabulary you need to remember the words, a lot of words. Thankfully, humanity invented lots of ways to remember things, so just google it and find the way you like. The idea is that it's a conscious intent to remember a lot of words, so you remember them when you need them.&lt;/li&gt;
&lt;li&gt;The feedback is the most valuable part. With a book, you can have keys to a fixed number of exercises. But every human invents his/her way to express ideas, and it's great to have a native speaker who can correct you. And two more points here: studying in a group is more encouraging and is cheaper. With Lingoda you'll have a different teacher each time, but I like it, because every time I have a fresh feedback.&lt;/li&gt;
&lt;li&gt;A roadmap is the second most valuable thing every course needs. There are some unified German certifications/exams, so it's better not to skip anything. The interesting point is that I studied with a book, which was approved by BAMF (Bundesamt für Migration und Flüchtlinge, a migration service, in short) and it was so far behind Lingoda's course for the same level.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Tools and resources to learn a language&lt;/h2&gt;
&lt;p&gt;Ok, just a list of resources I use every day:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Google Translate, to check pronunciation and the meaning, of course&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.verbformen.com/"&gt;Netzverb Dictionary&lt;/a&gt; for declanations and conjugations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slowgerman.com/"&gt;Slow German podcast&lt;/a&gt;, I repeat a phrase by phrase &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/@froehlichDeutsch"&gt;fröhlich Deutsch&lt;/a&gt; &amp;ndash; a YouTube teacher, who helped me with my German 'R'&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.duden.de/"&gt;Duden&lt;/a&gt;, the most respected German dictionary, if you have doubts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://germanwithlaura.com/"&gt;German with Laura&lt;/a&gt;, lot's of grammar rules simplified&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The only tip you need&lt;/h2&gt;
&lt;p&gt;There's a great article &lt;a href="https://blog.lingoda.com/en/how-to-love-language-learning/"&gt;8 ways to fall in love with language learning&lt;/a&gt;, and I highly recommend it. I could deal with the grammar in German, but I didn't like the pronunciation. I didn't like to speak German, it hurt even if I missed unnecessary consonants. I didn't like the sound, it was heavy and tuneless and the sound itself also hurt me. But the idea to find a way to love German changed everything, and it happened. I remember the two moments vividly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I met the teacher from Switzerland. His speech was so melodic and sweet and soft. I thought: that's it, I want to speak like that! And I just started speaking like that, so a teacher from Germany told me that I have a Swiss accent. It's not good or bad: everyone understands me, and I'm happy to speak like that. There are numerous accents in Germany, and some of them are melodic, but I liked the Swiss variant the best.&lt;/li&gt;
&lt;li&gt;In the Slow German podcast there was an &lt;a href="https://slowgerman.com/2023/03/16/noch-mehr-deutsche-musik-sg-254/"&gt;issue about modern German music&lt;/a&gt;, and I found indie German music. Not all of these bands sing in German, regretfully, but I liked &lt;a href="https://www.youtube.com/channel/UCheky_SBEExtbK_T0onuDwg"&gt;AnnenMayKantereit&lt;/a&gt; (a link to their YouTube channel), which do. And again, the sounds of the language are so soft and sweet... This band is now among my favorites on Spotify.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, if you want to save 50 USD with Lingoda, &lt;a href="https://learn.lingoda.com/en/referral/ve3amy"&gt;here's the link&lt;/a&gt;. By the way, I chose Lingoda based on &lt;a href="https://www.thebalancemoney.com/best-online-german-classes-4844948"&gt;this review&lt;/a&gt;. And that's it!&lt;/p&gt;</content><category term="blog"></category><category term="productivity"></category><category term="German"></category></entry><entry><title>Four most valuable programs for Me</title><link href="https://en.kovchinnikov.info/2023-07-programs.html" rel="alternate"></link><published>2023-07-12T09:54:00+02:00</published><updated>2023-07-12T09:54:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-07-12:/2023-07-programs.html</id><summary type="html">&lt;p&gt;PDF notations and typing trainers&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this article I'll be not talking about a terminal emulator or a browser, it's just not much to do with a computer nowadays without them. Instead, I'd like to cover the following topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PDF annotation&lt;/li&gt;
&lt;li&gt;Typing trainers&lt;/li&gt;
&lt;li&gt;PDF editing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Xournal is a program I use not so often to fill in some PDF forms. They are not designed as PDF forms, they are just PDFs to fill in some information and put a signature. My process without a special program would be the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Find a place to print a document (as I don't have a printer or MFD at home)&lt;/li&gt;
&lt;li&gt;Fill in and sign the document&lt;/li&gt;
&lt;li&gt;Scan a document somewhere (because smartphone photos are not good enough)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's a loss of paper, time, and money. With Xournal and similar software, you can fill everything in the PDF and send it right away. I can't say whether there's an alternative for this program in Linux, it just works great. You can also create a signature in another program and insert it whenever you need it. In Europe, it works for most of the cases. By the way, I use xournal++ which is a fork of the original xournal. &lt;/p&gt;
&lt;p&gt;Next, there are two programs I try to use daily, and using them is the simplest way to increase productivity. I'm talking about the typing trainers, I just search for them using the package manager in my distribution, so my findings are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gtypist, it works in terminal&lt;/li&gt;
&lt;li&gt;klavaro, a GUI app&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think that any app will do, you just need to install it and practice regularly.&lt;/p&gt;
&lt;p&gt;And a bonus: if you need to edit PDF, LibreOffice Draw can do that!&lt;/p&gt;</content><category term="blog"></category><category term="productivity"></category><category term="linux"></category></entry><entry><title>Emacs is so underrated</title><link href="https://en.kovchinnikov.info/2023-07-emacs.html" rel="alternate"></link><published>2023-07-06T12:13:00+02:00</published><updated>2023-07-06T12:13:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-07-06:/2023-07-emacs.html</id><summary type="html">&lt;p&gt;I use both Vim and Emacs and I wonder why Emacs is so unpopular&lt;/p&gt;</summary><content type="html">&lt;p&gt;What initially sparked my interest in Emacs was that &lt;a href="https://survey.stackoverflow.co/2023/#section-most-popular-technologies-integrated-development-environment"&gt;it was used so little&lt;/a&gt; (among developers). At this point, I used Emacs and Vim a lot and I chose Emacs for text writing (I'm not a programmer) for Markdown (mostly this website), HTML (my private journal), and &lt;a href="https://orgmode.org/"&gt;Org&lt;/a&gt; (structuring any information). I tried Doom Emacs and yet I'm using vanilla Emacs with 45-line config, of which 11 lines are comments. So, in this post, I'd like to comment on the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Doom Emacs and Spacemacs: the Good and the Bad&lt;/li&gt;
&lt;li&gt;Writing texts vs. programming and the vi-mode&lt;/li&gt;
&lt;li&gt;Using Emacs' modes&lt;/li&gt;
&lt;li&gt;Current state of Neovim development vs. Emacs&lt;/li&gt;
&lt;li&gt;Emacs extensions, are they really useful&lt;/li&gt;
&lt;li&gt;Use cases where Vim is unbeatable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's not a 'Emacs vs. Vim' article, I just try to structure my thoughts. Let's start then.&lt;/p&gt;
&lt;h2&gt;Doom Emacs and Spacemacs: the good and the bad&lt;/h2&gt;
&lt;p&gt;There are lots of great things about &lt;a href="https://github.com/doomemacs/doomemacs"&gt;Doom Emacs&lt;/a&gt; and &lt;a href="https://www.spacemacs.org/"&gt;Spacemacs&lt;/a&gt;. And first of all, I'd like to say that the concepts and the products are great, from my viewpoint. Notably, for the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;These products initiated a new wave of interest towards Emacs and maybe inspired lots of other products, including &lt;a href="https://www.lazyvim.org/"&gt;LazyVim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;It's a lot easier to install packages in these products, especially when you need a lot of extensions&lt;/li&gt;
&lt;li&gt;They add a fresh look to a really old product, which is valued by new users&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are some drawbacks though, which made me stay with vanilla Emacs, because I use only a few modes and extensions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Both are environments, made for someone else's needs, not mine&lt;/li&gt;
&lt;li&gt;At least Doom Emacs isn't very stable&lt;/li&gt;
&lt;li&gt;I'm totally fine with the Emacs standard package installation method&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I started tuning vanilla Emacs, got what I wanted in a few hours and I'm still satisfied with that. But let's take a step back and look at my requirements.&lt;/p&gt;
&lt;h2&gt;Writing texts vs. programming and the vi-mode&lt;/h2&gt;
&lt;p&gt;I write texts, and I spend a lot more time writing than editing text. I just have some ideas, I need to put them into files fast. In programming, it's different, I assume, especially when you do some code refactoring. So I don't need to switch to 'edit mode' (in any editor) very often. I'd rather prefer to enter 'edit mode' temporarily, fix a few things and then just continue writing the text. I need to minimize distraction and be able to move and fix things ASAP and think about my ideas and not about how to edit the text. I have vi keybindings in my muscle memory and still I'm more comfortable with Emacs vanilla keybindings.&lt;/p&gt;
&lt;p&gt;The second thing about 'vi modes' in Emacs is that Emacs modes have 'Emacs-style' keybindings. On the contrary, vim plugins have 'vi-style' keybindings. But mixing these two drives me crazy. Yes, in Emacs you can customize any keybindings, but there are lots of them in just 4 modes I use (including plain-text editing). I assume it's not worth wasting my time on that. And even if you customize the keybindings... old keybindings will stay in the help files, which I use a lot. For example, I don't work often with tables in Markdown, so after customization, I'll have to look in my config and not in the Markdown help file.&lt;/p&gt;
&lt;p&gt;There are two arguments, that Vim is more ergonomic than Emacs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Editing in Vim requires fewer keystrokes&lt;/li&gt;
&lt;li&gt;You don't need to press &lt;kbd&gt;Ctrl-Alt-something&lt;/kbd&gt;, which brings pain to your fingers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's look at a particular use case: I need to insert a bulleted list in HTML:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In Emacs, you can do that with HTML mode, which is installed by default. In Vim, you can install snippets or Emmet.&lt;/li&gt;
&lt;li&gt;In Emacs, I press &lt;kbd&gt;Ctrl&lt;/kbd&gt; with one hand and press &lt;kbd&gt;C C&lt;/kbd&gt; with another hand, then release &lt;kbd&gt;Ctrl&lt;/kbd&gt; and press &lt;kbd&gt;U&lt;/kbd&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It's very important to press modifier keys with another hand to evade discomfort. And it requires some self-discipline, but it's worth it. But what I see here, is that I pressed &lt;kbd&gt;Ctrl&lt;/kbd&gt; once: I pressed it, held it, and then released it. Instead, in Vim I need to enter command mode and exit command mode with two keystrokes. And in Emacs, I don't think about 'entering command mode' and 'exiting command mode' while I hold &lt;kbd&gt;Ctrl&lt;/kbd&gt;. What's more ergonomic then?&lt;/p&gt;
&lt;p&gt;Ok, let's talk about the modes I use every day.&lt;/p&gt;
&lt;h2&gt;Using Emacs' modes&lt;/h2&gt;
&lt;p&gt;I use three modes main modes (and text mode, of course): Markdown, Org, and HTML. &lt;/p&gt;
&lt;p&gt;Regarding &lt;strong&gt;Markdown&lt;/strong&gt; Emacs has a great mode written by &lt;a href="https://jblevins.org/projects/markdown-mode/"&gt;Jason Blevins&lt;/a&gt;. Just install it, open the .md file in Emacs, and press &lt;kbd&gt;Ctrl-H M&lt;/kbd&gt;. It's just great, it can do almost everything. And there are some more markdown modes available, notably for creating a table of contents. On the contrary, in Vim I tried to use &lt;a href="https://github.com/vimwiki/vimwiki"&gt;vimwiki&lt;/a&gt; and &lt;a href="https://github.com/honza/vim-snippets"&gt;snippets&lt;/a&gt;, but I wasn't able to get even some part of Markdown mode functions in Emacs. It's very sad, but it seems that Vim is more used by programmers who don't write a lot of Markdown.&lt;/p&gt;
&lt;p&gt;Regarding &lt;strong&gt;Org-mode&lt;/strong&gt;: this man, Carsten Dominik, who created it &amp;ndash; I think he's a genius. The whole concept is fascinating and it works great when you have to structure a lot of information and update it frequently. To get something similar I needed to have a wiki and constantly switch between 'read' and 'write' modes. Again, the 'export' feature is one of my favorites. But Org-mode is implemented &lt;a href="https://orgmode.org/#editors"&gt;in Vim and Neovim&lt;/a&gt; only partially. Why's that? Maybe not enough people are interested in that. And maybe it's not so simple to implement all the Org-mode features in Neovim even considering it has Lua.&lt;/p&gt;
&lt;p&gt;I suppose I need all the power of Org-mode and I prefer to use a more stable product if I have a choice. Org-mode was the main reason for me to switch to Emacs because I can do everything else just in any editor.&lt;/p&gt;
&lt;h2&gt;Current state of Neovim development vs. Emacs&lt;/h2&gt;
&lt;p&gt;Vim for a long time was considered a 'fast bare-metal editor', but look what's happening:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vim got a file manager&lt;/li&gt;
&lt;li&gt;Vim has Org-mode implementation(s)&lt;/li&gt;
&lt;li&gt;Neovim now has Lua to make it more customizable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Doesn't it seem like Vim/Neovim is just repeating Emacs's path? But a lot of talented people already put their effort into developing great modes and extensions for Emacs, you can just use it. When they needed to edit Markdown or write an Org-mode there was no Neovim with Lua, so they did it for Emacs. And these modes are still very, very useful. Why should I suffer then with a lack of functions and instability? So, I don't.&lt;/p&gt;
&lt;h2&gt;Emacs extensions, are they really useful&lt;/h2&gt;
&lt;p&gt;I don't use lots of extensions for Emacs. I tried an email client and a &lt;a href="https://github.com/zevlg/telega.el"&gt;Telegram client&lt;/a&gt; just for an experiment. But I use some Gmail features like 'undo send' and 'schedule send' that are hard to reproduce in an email client. So, are Emacs extensions an overkill? I think the RSS client and IRC client could be useful for me, just to use the same environment and the same keystrokes for editing. &lt;/p&gt;
&lt;p&gt;And, by the way, I don't use &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html"&gt;dired&lt;/a&gt; or pdf viewer inside Emacs. But I'm happy all these extensions exist, so people do have a choice. It's also great to have Vim/Neovim as a choice, so when is it preferable for me?&lt;/p&gt;
&lt;h2&gt;Use cases where Vim is unbeatable&lt;/h2&gt;
&lt;p&gt;First, there's an interesting concept using Vim with Tmux, along with Tmux's sessions. If it's preferable for your workflow, Emacs won't help you: it sucks in a terminal and it assumes it's an external program to everything that runs inside it.&lt;/p&gt;
&lt;p&gt;Second, if you have a terminal-only environment, like &lt;a href="https://gitforwindows.org/"&gt;Git for Windows&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;No holy wars, peace to everyone.&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category><category term="productivity"></category><category term="vim"></category><category term="emacs"></category></entry><entry><title>Reflecting on starting something new and big</title><link href="https://en.kovchinnikov.info/2023-07-big.html" rel="alternate"></link><published>2023-07-04T10:36:00+02:00</published><updated>2023-07-04T10:36:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-07-04:/2023-07-big.html</id><summary type="html">&lt;p&gt;Frustration and overcoming it&lt;/p&gt;</summary><content type="html">&lt;p&gt;Again sharing some thoughts that normally go to my private journal only. This time it's about starting some initiative in an unknown field and something large-scale. How do you feel about that? Here's what I feel:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The idea itself seems fascinating at the very beginning, normally you do the following:&lt;ul&gt;
&lt;li&gt;Write a general description, what's the problem and how you are going to resolve it&lt;/li&gt;
&lt;li&gt;Break down the work into smaller chunks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;It starts to feel boring just executing those 'smaller chunks'.&lt;/li&gt;
&lt;li&gt;It turns out that you underestimated the amount of time and effort required like 3x-5x.&lt;/li&gt;
&lt;li&gt;New ideas appear as you write, so you start to re-write, and you don't feel that you are moving forward.&lt;/li&gt;
&lt;li&gt;You feel that you are not able to get to the most exciting and rewarding part for a long time, and every day this moment is postponed: the moment when something starts to appear and work.&lt;/li&gt;
&lt;li&gt;You pray that all these ideas just let you go and you could get some sleep.&lt;/li&gt;
&lt;li&gt;Each day you feel guilty that you didn't contribute enough time and effort.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I've been through this several times, it's always like that and it's completely fine.&lt;/p&gt;
&lt;p&gt;What helps?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Regular push-ups just to relieve the strain&lt;/li&gt;
&lt;li&gt;Getting out for a walk&lt;/li&gt;
&lt;li&gt;Taking time to think&lt;/li&gt;
&lt;/ul&gt;</content><category term="blog"></category><category term="productivity"></category></entry><entry><title>We need older software</title><link href="https://en.kovchinnikov.info/2023-07-software.html" rel="alternate"></link><published>2023-07-03T23:49:00+02:00</published><updated>2023-07-03T23:49:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-07-03:/2023-07-software.html</id><summary type="html">&lt;p&gt;Changing linux distributions and hoping for the best&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;As you may already know, 2023 is not the year of linux on the desktop, despite many predictions. As a (not so typical) linux user I continue to experience major difficulties using linux as my desktop, so I have to change linux distributions from time to time. My current choice is CentOS Stream (oh no!) and it feels good, despite some minor issues. So in this article, I'll try to cover: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The distribution choice&lt;/li&gt;
&lt;li&gt;Migration process&lt;/li&gt;
&lt;li&gt;Some conclusions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I hope you'll enjoy it and please don't treat it 100% seriously. There's still a lot of fun. At least we can continue to think so.&lt;/p&gt;
&lt;h2&gt;The distribution choice&lt;/h2&gt;
&lt;p&gt;So my path to CentOS and the logic behind this choice was like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I used &lt;strong&gt;Fedora&lt;/strong&gt; at home for a long time.&lt;/li&gt;
&lt;li&gt;For 6 months I used &lt;strong&gt;Ubuntu LTS&lt;/strong&gt; at work, it worked fine with some minor tuning and with a very old Gnome 3.&lt;/li&gt;
&lt;li&gt;Fedora at home started to seem unstable, and I thought of taking advantage of &lt;strong&gt;Debian&lt;/strong&gt; stability and modern software from Flathub. It required some major tuning like installing and deleting software, VPN in Gnome didn't work at all, but everything else worked and was fine until my SSD died. And I can't say whether Debian or Fedora were involved. But I had my backups. And I had this idea that working with older software isn't that bad.&lt;/li&gt;
&lt;li&gt;I didn't have time to tune Debian one more time, so minimizing my efforts I installed &lt;strong&gt;Fedora&lt;/strong&gt; and was happy for some time.&lt;/li&gt;
&lt;li&gt;After that Fedora started to be unstable again, I became afraid of kernel upgrades, after which my Wi-Fi can go down. And the kernel is so fresh, that no one knows the workarounds to the new kernel bugs. Besides, all the apps crash. So, I installed &lt;strong&gt;Ubuntu&lt;/strong&gt; with vanilla Gnome. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It worked until it didn't. The file manager had annoying bugs, and I use it a lot. The system complained about SMBus and snap, although I removed snap completely:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;1.147188&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i801_smbus&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Transaction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;timeout&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;1.149358&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i801_smbus&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Failed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;terminating&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;transaction&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;1.149474&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i801_smbus&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0000&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SMBus&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;busy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t use it!&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.091517&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bare_5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.094795&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;core22_607&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.097791&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;firefox_2579&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.111920&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;core20_1738&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.113762&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd_17883&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.123071&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;desktop&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;integration_14&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.125320&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;gtk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;themes_1535&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.137192&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd_18933&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.140238&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;core20_1852&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.140616&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;desktop&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;integration_57&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="mf"&gt;3.142646&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snaps&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;snapd&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;desktop&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;integration_49&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;snap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Can&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;t open blockdev&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maybe it's different with Ubuntu LTS. It just didn't feel right, you know. And I thought about these advanced RedHat technologies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RPM, which upgrades the system in transactions, so you don't get corrupt package dependencies &amp;ndash; which is quite fixable in Ubuntu and Debian, though. But with Debian (if you want more stability) external repositories are evil just because of that &amp;ndash; it's hard for deb/apt to handle them. So, I guess that Ubuntu invented snap to hide this, but this is a conspiracy theory already. &lt;/li&gt;
&lt;li&gt;SELinux, which adds extra security level to the system, and that's especially important if you install some closed-source software.&lt;/li&gt;
&lt;li&gt;Great Gnome experience right from the beginning &amp;ndash; no need to tune this, at least.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm sure there are lots of other great technologies I don't know about, like XFS.&lt;/p&gt;
&lt;p&gt;Besides, most software has deb or rpm packages, so I wasn't even looking outside of this world (like Arch, Manjaro, etc.).&lt;/p&gt;
&lt;p&gt;I thought about installing RHEL, I even registered as a developer and RHEL download was available. But at least two points pushed me towards CentOS:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I wouldn't like to set up RHEL subscriptions for updates or in some way be dependent on them.&lt;/li&gt;
&lt;li&gt;Maybe it's not a bad idea to have a little fresher software than RHEL.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, I decided to try CentOS, but I hope the description of my migration procedure will help someone.&lt;/p&gt;
&lt;h2&gt;Migration process&lt;/h2&gt;
&lt;p&gt;We need to do three tasks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Prepare installation media&lt;/li&gt;
&lt;li&gt;Backup the data&lt;/li&gt;
&lt;li&gt;Install CentOS Stream and perform post-installation tasks&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I think it's a bad idea to write the installation image directly to the installation media. Imagine, you experience some bugs during or after installation. You may need to try another image, but your HDD won't boot at this stage already. I suggest doing this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download several images. For example CentOS, OpenSUSE, and Ubuntu LTS.&lt;/li&gt;
&lt;li&gt;Install &lt;a href="https://www.ventoy.net/"&gt;Ventroy&lt;/a&gt; on the installation media.&lt;/li&gt;
&lt;li&gt;Copy the installation images to the installation media.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As an experienced linux user, I make a list of important programs and Gnome extensions on a sheet of paper at this stage.&lt;/p&gt;
&lt;p&gt;And now we are ready for surprises, so let's back up the data:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clean the browser cash, as it can slow down the backup process.&lt;/li&gt;
&lt;li&gt;Create a new user, say, 'temp', with administrative privileges.&lt;/li&gt;
&lt;li&gt;Login with 'temp', insert backup media, and create a tar file on the backup media (without compression) of your normal user home directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example, my backup media is &lt;code&gt;/run/media/data&lt;/code&gt; and my home catalog is &lt;code&gt;/home/kostya&lt;/code&gt;. Then we do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# cd /run/media/data
# sudo tar cf backup.tar /home/kostya
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Normally the archive preserves just the last catalog, but to be sure, you can check the archive with &lt;code&gt;tar tf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now we wait till the backup is complete and &lt;strong&gt;safely extract&lt;/strong&gt; the backup media.&lt;/p&gt;
&lt;p&gt;The installation process for CentOS is like 'nothing special', it just works. The only thing to mention here is that RHEL and Fedora have a 9 Gb installation image. I had 3 USB sticks capable of 8 Gb each, so I had to go outside my apartment (for the first time in a few months) and buy a bigger USB stick. Checkmate, CentOS Stream. No, I don't regret spending &amp;euro;12.&lt;/p&gt;
&lt;p&gt;And if you want to get CentOS documentation, regarding the installation, for example, you get... to the RHEL documentation, which is awesome.&lt;/p&gt;
&lt;p&gt;The first step after installation (I assume you created your user during installation) is to extract the backup. So, again:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new user, say, 'temp', with administrative privileges.&lt;/li&gt;
&lt;li&gt;Login with 'temp', insert backup media, and extract the tar file on the backup media to your user home directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# sudo tar xf /run/media/data/backup.tar -C /home
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or something like that, you know &amp;ndash; in any case, it's a bad idea to trust some random code from the internet and launch it with 'sudo' privileges without understanding it.&lt;/p&gt;
&lt;p&gt;I have some special requirements regarding software, so with CentOS, it was like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Chrome is a must for me, so I just get rpm from the official website. It runs Microsoft Teams and Google Meet video conferences and lots of Google-specific websites (like Google Drive and Gmail).&lt;/li&gt;
&lt;li&gt;I need even more communication software, so I install Zoom, Skype, and Telegram from Flathub.&lt;/li&gt;
&lt;li&gt;I also install WPS Office from Flathub as my main local office suite, but I still leave LibreOffice just in case.&lt;/li&gt;
&lt;li&gt;I need Emacs and Vim, no surprises here.&lt;/li&gt;
&lt;li&gt;I use &lt;a href="https://www.reaper.fm/"&gt;Reaper&lt;/a&gt; for podcast editing, it contains an installation script, which works fine.&lt;/li&gt;
&lt;li&gt;I use &lt;a href="https://camunda.com/download/modeler/"&gt;Camunda Modeler&lt;/a&gt; for process maps, I just move it to &lt;code&gt;/opt&lt;/code&gt; and created a symlink to &lt;code&gt;/usr/bin&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;I play Minecraft sometimes, which works a lot better with Oracle JRE. I just moved the Minecraft installer to &lt;code&gt;/usr/bin&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;I update this website with &lt;a href="https://getpelican.com/"&gt;Pelican&lt;/a&gt;, which requires python-venv and python-pip. It just works in any distro.&lt;/li&gt;
&lt;li&gt;I upload this website to GitHub using git, no problems here as well.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By the way, I don't get all this anxiety about desktop icons. It's better with desktop icons, but I have no problems launching Minecraft and Camunda Modeler from &lt;kbd&gt;Alt-F2&lt;/kbd&gt; prompt. Yes, this prompt has auto-completion. And you can name your symlinks in &lt;code&gt;/usr/bin&lt;/code&gt; whatever you want.&lt;/p&gt;
&lt;p&gt;Last, but not the least, we need backups! I used Deja Dup to make weekly backups to Google Drive, but I failed to install Google Drive support for Deja Dup in CentOS. But then I thought that my internet connection is slow and uploading 4 Gb to Google Drive takes a lot of bandwidth. I switched to &lt;a href="https://torsion.org/borgmatic/"&gt;borgmatic&lt;/a&gt; backup to an external HDD.  It's easy to set up and it takes just seconds. Maybe my backups to Google Drive were the reason for the lagging Zoom video or it was just a coincidence. No, Ubuntu couldn't do that to me.&lt;/p&gt;
&lt;h2&gt;Some conclusions&lt;/h2&gt;
&lt;p&gt;Regarding CentOS, it works great with some minor 'desktop experience' exceptions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 of 4 of my favorite Gnome extensions won't install for this Gnome version, but I was able to install Unity.&lt;/li&gt;
&lt;li&gt;It doesn't have Gnome games, so I have to play Sudoku online.&lt;/li&gt;
&lt;li&gt;It's better to add EPEL and Flathub repos, you know.&lt;/li&gt;
&lt;li&gt;For the first time I was able to just install the (rpm) package with Oracle JRE with no additional manual actions.&lt;/li&gt;
&lt;li&gt;My notebook doesn't need special drivers, but still, all the Fn buttons work and everything else works as well, maybe I lack some stages of suspend/hibernation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;XFS seems to work faster, than EXT4, but I have no proof.&lt;/p&gt;
&lt;p&gt;The comparison table with my criteria looks like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;Criteria/Distribution&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Ubuntu&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Debian&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Fedora&lt;/th&gt;
&lt;th style="text-align: left;"&gt;CentOS&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Critical kernel bugs&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Small annoying bugs&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Falling software&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Not so nice desktop experience&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Requires significant customization&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Lacks modern technologies&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;Yes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;td style="text-align: left;"&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;2&lt;/td&gt;
&lt;td style="text-align: left;"&gt;3&lt;/td&gt;
&lt;td style="text-align: left;"&gt;3&lt;/td&gt;
&lt;td style="text-align: left;"&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It seems that I could be rational.&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category></entry><entry><title>Several ideas on global disasters</title><link href="https://en.kovchinnikov.info/2023-07-covid.html" rel="alternate"></link><published>2023-07-03T23:19:00+02:00</published><updated>2023-07-03T23:19:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-07-03:/2023-07-covid.html</id><summary type="html">&lt;p&gt;The question is, what matters most&lt;/p&gt;</summary><content type="html">&lt;p&gt;Usually, I write ideas like this in my private journal. But I thought, maybe I should share this reflection on the 2020-2023 years, the influence of global disasters like Covid and the war in Ukraine. Despite these global events, we continue to experience losses, that can have nothing to do with these events, they just happen and put more pressure on us. Like people just continue dying from natural reasons and there's nothing we can do about it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Our health and our families' safety are the things that matter the most.&lt;/li&gt;
&lt;li&gt;Just making money is not 'cool' anymore and &lt;a href="https://www.youtube.com/watch?v=B-emtL137z4"&gt;it doesn't make anyone happy&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Volunteering is a must just to handle the pressure from everything that happens and dealing with the guilt complex like 'I don't do anything'.&lt;/li&gt;
&lt;li&gt;Doing something even small, but valuable to other people for free is 'cool'. Besides, you can die and no one will remember you in case you were concerned only about yourself.&lt;/li&gt;
&lt;li&gt;People are divided into two groups: those who try to hide from reality ('the Instagramers') and those, who try to deal with it. Note: it's not about having an Instagram account, it's about looking for pictures from the 'ideal life'.&lt;/li&gt;
&lt;li&gt;Facebook is dead because its management made their choice to pursue popularity no matter what. Now it's a trashy space for people who don't get it.&lt;/li&gt;
&lt;li&gt;Western and Eastern civilizations exist in different coordinate systems in terms of values and logic. That's why it's so hard and sometimes impossible for them to deal with each other.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And we have to move on with all this sad stuff.&lt;/p&gt;</content><category term="blog"></category><category term="productivity"></category></entry><entry><title>Installing LAMP – am I dumb?</title><link href="https://en.kovchinnikov.info/2023-06-lamp.html" rel="alternate"></link><published>2023-06-10T14:51:00+02:00</published><updated>2023-07-04T10:22:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-06-10:/2023-06-lamp.html</id><summary type="html">&lt;p&gt;Trying to recover information from my wiki&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Task&lt;/h2&gt;
&lt;p&gt;Here's the story: I had a &lt;a href="https://tiki.org/"&gt;Tikiwiki&lt;/a&gt;, installed on my web hosting. After some time I decided that it was an overkill, so I backed up the SQL database and the application and removed this wiki from hosting. Now the only hosting I use is GitHub Pages for static HTML pages. So, I decided to recover information from this wiki, what could be easier, right? LAMP (Linux + Apache + MySQL + PHP) was the most popular use case for Linux a while ago. I have Ubuntu 23.04, it's the most popular distribution, so what could go wrong? Well, here adventures begin.&lt;/p&gt;
&lt;h2&gt;All went wrong&lt;/h2&gt;
&lt;p&gt;So, the first idea was to install Apache, PHP, and MariaDB locally and just restore everything. It's not so clean method, because you install lots of packages and services to your system and if you don't need them, you have to clean up. But let's go for it. Well, Tikiwiki doesn't support PHP 8, which is shipped with Ubuntu. But you can install PHP 7.4 on Ubuntu, right? Well, you have to &lt;a href="https://linux.how2shout.com/how-to-install-php-7-4-on-ubuntu-22-04-lts-jammy-linux/"&gt;add an external repository&lt;/a&gt; and now only Ubuntu 22.04 is supported. I googled it, but I didn't find a solution. And I'm not going to change the distribution because of this task.&lt;/p&gt;
&lt;p&gt;OK, what else can we do? We have Docker, right? We even have &lt;a href="https://github.com/sprintcube/docker-compose-lamp"&gt;a LAMP stack for Docker&lt;/a&gt;, that's great! Apache worked, I could connect to the MariaDB server and restore the database. The issue with Docker is that you need to use TCP for database connection, not Unix sockets. Tikiwiki couldn't connect to the database, I tried to change the server name to 127.0.0.1, but it didn't help. The new installation of Tikiwiki couldn't connect to the database server as well.&lt;/p&gt;
&lt;p&gt;OK, but we can have a virtual machine with any distribution and install everything there! That's right, you can choose VirtualBox or Gnome Boxes (which use KVM and QEMU), for example. The trick here was that I couldn't install VirtualBox &amp;ndash; again, because Ubuntu 23.04 wasn't supported by VirtualBox. Gnome Boxes worked fine, but I thought of a simpler solution. By the way, I didn't find any easy way or receipt to fix the resolution in Gnome Boxes.&lt;/p&gt;
&lt;h2&gt;Solution&lt;/h2&gt;
&lt;p&gt;Ok, I just need to extract some articles, which are stored in some format in the database. So, I restored the database and dumped these articles into one file using SQL query. Then I converted these articles from Markdown to &lt;a href="https://orgmode.org/"&gt;org&lt;/a&gt; using &lt;a href="https://pandoc.org/"&gt;Pandoc&lt;/a&gt;, and now I have a single org file, that's it. Note: I thought at first that it was Markdown and used Pandoc converter from markdown, but TikiWiki has it's own syntax, which is also supported by Pandoc.&lt;/p&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;In this case, I have lots of questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If PHP is still alive, then how do people develop using it? If you are a PHP developer, you have some apps which require PHP 7.4. Does no one of these developers use Ubuntu 23.04? Do all of them use pre-built Docker containers with their apps?&lt;/li&gt;
&lt;li&gt;Tikiwiki has issues with docker containers, so does no one of its developers use Docker?&lt;/li&gt;
&lt;li&gt;Why is PHP 7.4 considered outdated in Ubuntu, if it's still used on all the hostings by default? Which makes people use some strange external repository to install PHP 7.4.&lt;/li&gt;
&lt;li&gt;Does no one use VirtualBox on Ubuntu 23.04?&lt;/li&gt;
&lt;li&gt;Is everyone fine working with a small screen size in Gnome Boxes?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For me, it's at least strange, you know. :)&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category></entry><entry><title>Choosing a bike, looking for underdogs</title><link href="https://en.kovchinnikov.info/2023-05-choosingabike.html" rel="alternate"></link><published>2023-05-09T18:51:00+02:00</published><updated>2023-05-09T18:51:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-05-09:/2023-05-choosingabike.html</id><summary type="html">&lt;p&gt;Unexpected outcome from a simple web research&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;So, I started experiencing &lt;a href="2023-03-commuting2.html"&gt;some difficulties&lt;/a&gt; while commuting on my singlespeed, and I decided to buy another bike. There are a few questions regarding that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What are the requirements?&lt;/li&gt;
&lt;li&gt;Where to buy?&lt;/li&gt;
&lt;li&gt;What are the bike types to choose from?&lt;/li&gt;
&lt;li&gt;What a strategy to choose 'underdogs' can give you?&lt;/li&gt;
&lt;li&gt;What did I choose finally?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My requirements are rather specific, so let's start with them. Nevertheless, I believe the logic I review here could be useful for another set of requirements, and, more than that, you could end up with the same choice that I made.&lt;/p&gt;
&lt;h2&gt;What are the requirements?&lt;/h2&gt;
&lt;p&gt;I'm a bit tired of destroying my bike with the city terrain and destroying myself riding against the wind. Aside from that, I'd like some reserve for backpacking trips and the bike should be budget-friendly for sure. So, the requirements are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;7+ gears&lt;/li&gt;
&lt;li&gt;The frame that fits wider tires&lt;/li&gt;
&lt;li&gt;All the necessary holes to fit a standard back pannier rack&lt;/li&gt;
&lt;li&gt;Industrial bearings&lt;/li&gt;
&lt;li&gt;More of a horizontal riding position&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Based on the last requirement the whole class of touring bikes was excluded, although they can be tough and fit all the other requirements, being specifically designed for commuting.&lt;/p&gt;
&lt;h2&gt;Where to buy?&lt;/h2&gt;
&lt;p&gt;Buying a new bike is the last option to consider regarding my small budget, but there are a few important points to mention here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In Germany, there are a few scam websites that have normal domains and catalogs, but the prices are just a bit cheaper than they should be. People report they never received bikes from these stores, so it's a great idea to check internet shop reviews and ratings first.&lt;/li&gt;
&lt;li&gt;Decathlon is a great option because you do not overpay for the brand and you get great value for the bucks, we'll return to that later.&lt;/li&gt;
&lt;li&gt;Ebay offers a range of new bikes, but the choice of brands is limited. It has great filters by frame size, for example. But when you apply the filters it comes out that there's not so much to choose from here.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For used bikes, I considered the following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ebay as well, but again for a specific frame size and bike type the choice is limited.&lt;/li&gt;
&lt;li&gt;Kleinanzeigen and that's my option choice, because it's the cheapest, and most of the time you do not pay for delivery or any other services.&lt;/li&gt;
&lt;li&gt;buycycle.com, as they have a great choice of bikes throughout Europe, but their services are costly, which makes it reasonable to buy bikes costing 1000 &amp;euro; and above here.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Searching on Kleinanzeigen can be tricky: when I was looking for a mountain bike, I found a few offers searching just for a 'bicycle', but they didn't show up when I searched for 'mtb'. But the greatest thing about this site is its ability to set location and radius. People are concerned about their ratings and respond politely and fast. In Germany, owners usually tell you all the drawbacks first, and it's not a problem to send you a few more photos. So, this service is powered by great users!&lt;/p&gt;
&lt;h2&gt;What are the bike types to choose from?&lt;/h2&gt;
&lt;p&gt;At first, I tried to widen my search, so I looked in the following categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Racing bikes, preferably endurance&lt;/li&gt;
&lt;li&gt;Gravel bikes&lt;/li&gt;
&lt;li&gt;Mountain bikes&lt;/li&gt;
&lt;li&gt;Cross bikes, fitness bikes, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regretfully, a racing bike is not an option, because, with a separate bike lane and people driving sometimes crazy fast, you would never want to ride a road. I could tell what riding a bike lane with a racing bike feels like because I have 28 mm tires with 7 atm (rear). Even with the steel frames it hurts, and I was looking for an aluminum frame, which would hurt even more. More than that, with these tires bearings suffer too, as the bike lane isn't smooth at all.&lt;/p&gt;
&lt;p&gt;Recently endurance bikes adopted frames fitting 32 mm tires (and even having these tires by default) or tires up to 38 or even 40 mm wide. That's great, but it happened recently, I was looking for a used bike, and there are almost no such offers available on the aftermarket. It's a good question whether a 32 mm tire makes a difference compared to a 28 mm tire.&lt;/p&gt;
&lt;p&gt;The same story goes with the gravel bikes: there are too few offers on the aftermarket as these bikes are relatively new and they cost 1.5x more, than an endurance bike. These made a lot of people pissed off and they call gravel bikes 'a scam', as you could just fit wider tires in a modern endurance bike. Well, I'd choose a gravel bike, if I had the budget to buy a new bike because it's fast and tough at the same time. Faster than a mountain bike and tougher, than a racing bike, with a mix of parts from both types. It's a compromise, but I agree that that could be a single multi-purpose bike.&lt;/p&gt;
&lt;p&gt;Mountain bikes are incredibly cheap and are overlooked. In my humble opinion, they are an engineering masterpiece and I spent many years riding MTB on the road. And it was an enjoyable experience. All the options, including mounting points, hydraulic brakes (almost standard), industrial bearings, and great amortization forks... I chose this type because I enjoy MTB riding style: manuals, bunny- and side-hops, and drops. No, you can't do that well on a gravel bike. And this riding style will destroy a racing bike, as well as the rough city terrain I have to deal with, including paving stones. And it's so comfortable to ride in a city with an MTB.&lt;/p&gt;
&lt;p&gt;Cross and fitness bikes are MTB with road tires and some accessories, so we'll skip that. A few amusing moments about famous MTB vs. gravel bikes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There are &lt;a href="https://www.youtube.com/watch?v=d1CCH0LrVlo"&gt;successfull attemts&lt;/a&gt; to turn MTB into a gravel bike. I'm not sure that changing a handlebar and the shifters is worth that. Maybe because of that, we don't have a special name for these bikes. They ride great, although MTB geometry is different.&lt;/li&gt;
&lt;li&gt;Gravel bikes are road bikes fitting wider tires, so don't expect something more than that. It's fun watching racing bikers riding in the mud on gravel bikes just because someone introduced a new 'gravel' category.&lt;/li&gt;
&lt;li&gt;It's not certain, whether a gravel bike should have one or two front chainrings, so now the manufacturers make both. There's a tendency though to make one chainring on the gravel bike and now they call a gravel bike with two chainrings a new category &amp;ndash; &lt;a href="https://www.youtube.com/watch?v=9iiIIW6KiWs"&gt;an all-road bike&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A lot of people wonder if gravel bikes are just MTBs from the 90s, and some manufacturers even &lt;a href="https://bikerumor.com/canyon-admits-that-gravel-bikes-are-just-90s-mountain-bikes-with-grizl-throwback-edition"&gt;admit that&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Gravel bikes normally don't have a front suspension. Guess what? MTBs have a suspension fork with an option for locking, often with remote control. It's heavier though.&lt;/li&gt;
&lt;li&gt;Recently suspension forks were introduced for gravel bikes...&lt;/li&gt;
&lt;li&gt;Gravel championships are &lt;a href="https://www.bicycling.com/news/a41577588/gravel-worlds-was-won-on-a-road-bike/"&gt;won on road bikes with wider tires&lt;/a&gt;, and that says it all.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What a strategy to choose 'underdogs' can give you?&lt;/h2&gt;
&lt;p&gt;This strategy is aimed at saving the money. You can do that in the following ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Choosing a good brand, that wasn't pushed so hard by the marketing, hence the low price&lt;/li&gt;
&lt;li&gt;Choosing a cheap brand&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You could also look at the niches with low demand and high supply. Covid-racing or covid-gravel bikes are the ones to consider here. People bought lots of bikes during the lockdown, they are still produced, but the demand lowered to just normal.&lt;/p&gt;
&lt;p&gt;A few particular options, which are now (May 2023) incredibly cheap relative to their great value:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scott Speedster 20 and 30. Somehow it got &lt;a href="https://www.youtube.com/watch?v=DFkBcdp2WIM"&gt;a bad review&lt;/a&gt; as an 'imbalanced' bike. Would you ride my shitty singlespeed and make a review for it, please? :) At the same time, Trek Domane got hugely positive reviews, and now you can buy Scott with Tiagra groupset for the price of Track Domane with Claris groupset.&lt;/li&gt;
&lt;li&gt;Octane One Gridd 2 (and 1, but it's not in stock anymore). An unknown company with high-quality bikes. Not too many reviews, and great groupsets.&lt;/li&gt;
&lt;li&gt;Recently Van Rysel RC520 105 Prowheel was available for less than 900 &amp;euro; For a Shimano 105 groupset + Microshift, seriously.&lt;/li&gt;
&lt;li&gt;Fuju Jari 2.1 &amp;ndash; a gravel bike with Tiagra groupset for less than 1100 &amp;euro;. Just because Fuji isn't Trek.&lt;/li&gt;
&lt;li&gt;Surprisingly Cannondale Topstone 4 &amp;ndash; a gravel bike for less than 1100 &amp;euro; thanks to Microshift groupset.&lt;/li&gt;
&lt;li&gt;Decathlon's Rockrider for MTB&lt;/li&gt;
&lt;li&gt;Decathlon's Elops Speed 920 is an unusual 'city bike': 32 mm tires, Shimano Alfina (a planetary hub), an aggressive geometry, a narrow handlebar, hydraulic brakes, and lights with a lock... I want it! It doesn't have a dynamo front hub, regretfully, so you have to charge the lights at home. The price is great though.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What did I choose finally?&lt;/h2&gt;
&lt;p&gt;So, I got an MTB with 27,5" tires, which is two years old, the condition is 'almost new', and the frame fits me well, for half of the new bike price. It rides great, I just replaced a few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tires &amp;ndash; I bought some cheap slicks 2 inches wide. That's probably too much, but they roll well and they are not too heavy.&lt;/li&gt;
&lt;li&gt;Seat post eccentric clamp with an ordinary clamp to prevent the theft of the saddle and the seat post.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's more like a dirt-jumping bike, than a cross-country one, but it rides so nicely. I immediately started to ride a lot more, to more distant locations and overall I'm happy with my choice. Compared to a gravel bike it's naturally cheaper for a significant amount of money. By the way, it's lighter than my steel singlespeed. I was afraid that a front chainring is too small, but I used the highest gear only twice, with the wind at my back. And now it's so nice shifting to lower gears with the wind at my front. Just get a Deore shifter or above.&lt;/p&gt;
&lt;p&gt;I don't need hydraulic brakes, they are just in place. I'll not be able to service them myself, that's the only drawback. I'd like to replace or cut a handlebar, as I need to disperse with other cyclists, but that's not critical. The riding position is great and it feels like riding not a bike, but something tough as a motorcycle, lightweight at the same time. It feels like... I'm ready for new adventures! And I don't need to fix something on my bike &lt;strong&gt;daily&lt;/strong&gt;, it saves a huge amount of time.&lt;/p&gt;
&lt;p&gt;When I took out the seat post of my steel singlespeed, it was all covered with rust, by the way. And you have nothing to do with that, that's what happens inside the steel frame under the rain. Aluminium doesn't rust and doesn't crack like carbon. Just be warned.&lt;/p&gt;</content><category term="blog"></category><category term="cycling"></category></entry><entry><title>Budgeting tips</title><link href="https://en.kovchinnikov.info/2023-05-budgeting.html" rel="alternate"></link><published>2023-05-07T20:03:00+02:00</published><updated>2023-05-07T20:03:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-05-07:/2023-05-budgeting.html</id><summary type="html">&lt;p&gt;Managing a tight budget&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I've been living with a tight budget for 6 months. From a point when everything seemed 'awful', I came to the point when it's at least 'manageable', and I'd like to share these points with you. There are some limitations though:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I live alone and I have to consider my preferences only, forcing someone else to follow the same points is useless;&lt;/li&gt;
&lt;li&gt;Apart from a tight budget, I have a small apartment, and my other goal is to avoid clutter; before that, I had a big apartment with lots of clutter and I'm even happy that I left that behind;&lt;/li&gt;
&lt;li&gt;Topics like making a creative budget that fits your needs, having the discipline to follow it, or finding ways to gain more money are obviously outside of this post.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ok, so, what do we have here then?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Having a budget&lt;/li&gt;
&lt;li&gt;Buying multi-purpose stuff&lt;/li&gt;
&lt;li&gt;Filter the demand even more&lt;/li&gt;
&lt;li&gt;Set clear requirements for what you want/need&lt;/li&gt;
&lt;li&gt;Having a list of needs/wants and prioritizing it&lt;/li&gt;
&lt;li&gt;Eating healthy food&lt;/li&gt;
&lt;li&gt;Buying used stuff&lt;/li&gt;
&lt;li&gt;Postpone costly upgrades&lt;/li&gt;
&lt;li&gt;Buy on the internet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's go through this list!&lt;/p&gt;
&lt;h2&gt;Having a budget&lt;/h2&gt;
&lt;p&gt;By having a budget I mean creating a budget on paper or in a spreadsheet and sticking to it, otherwise, it's just a paper or a spreadsheet. In a budget you typically have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Income entries with the dates + possible deviations&lt;/li&gt;
&lt;li&gt;Cost entries, that's what you &lt;strong&gt;must pay&lt;/strong&gt; within the dates + possible deviations&lt;/li&gt;
&lt;li&gt;Reserve entry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The simplest way to create a budget is to take &lt;strong&gt;the next month&lt;/strong&gt;, which means all your income was in the previous month. After that you subtract all the cost entries, again, that's what you must pay, like the rent, utility payments, internet, cellular, food, &lt;strong&gt;and your reserve&lt;/strong&gt; (e.g., if you get paid late) you get the available sum. It doesn't mean that you are free to spend it, we'll come to this.&lt;/p&gt;
&lt;p&gt;Just in case, I'd like to underline, that all regular payments should be in cost entries, including all the subscriptions. These sums will be written off automatically, so if a subscription is active, it should be there. Sometimes it's hard to remember all the regular spending, so take your time and check two or three times. If you mess up here, you can end up with a really big problem of having a cash gap. By the way, you can go through your bank statement for the previous month, it's legal and useful.&lt;/p&gt;
&lt;p&gt;Then, you have a few more questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do I expect any required but unregular payments this month? Include them in the costs as well.&lt;/li&gt;
&lt;li&gt;Do I have needs, that can't be postponed? Like buying shoes or clothes or anything just to keep my normal activities running. Include these costs as well.&lt;/li&gt;
&lt;li&gt;Do I have any kind of uncertainty? If yes, increase your reserve entry.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's hard when the sum you get is next to zero or negative. At least, you know the reality, but, again, sometimes it's really hard to face it. I guess that more people avoid budgeting because of the fear of facing a reality, not because they don't know how to add and subtract &amp;ndash; and that's all required at this stage! If the sum you get is next to zero or negative, you are in the shithole. Getting out of the shithole is hard and there's no receipt to do that. But there's exactly one thing significantly worse than this experience of getting out: being in the shithole and being unaware of that.&lt;/p&gt;
&lt;h2&gt;Buying multi-purpose stuff&lt;/h2&gt;
&lt;p&gt;As I live in a small apartment, I'm concerned about buying stuff. Stuff occupies my personal space and makes my life worse no matter how useful it is. That's how I live, and I don't expect you to agree with that, as well as with the whole minimalist philosophy. Although I can't admit I follow this philosophy all the time. I just tried to explain the choices I make from the examples below. &lt;/p&gt;
&lt;p&gt;This hack came from a video about hiking. Just imagine you carry for several days the stuff you buy. Is a coffee machine worth it? I'm not a coffee fan, but I like to drink coffee sometimes, and my guests do too. I like brewing tea and I don't like teabags. How's that related to each other? Well, a French press allows me to have reasonably good coffee and brew tea in it. A French press is simple to wash, and it occupies a fraction of the space for a teapot and a coffee machine.&lt;/p&gt;
&lt;p&gt;The same goes for tools. First, any multitool is great in terms of space occupied. Any wrench with variable head size is better than a set of fixed-sized wrenches. But my most beloved example is a drill: you can have a corded drill or a cordless drill that would replace an electric screwdriver, a drill, and a perforator... if it's good enough! In some cases, the perforator can't be replaced, but it can be borrowed to accomplish a particular work.&lt;/p&gt;
&lt;p&gt;And I just don't care about having a multi-purpose table: it's a dining table, a writing table, and a computer table.&lt;/p&gt;
&lt;p&gt;But that's not all, let's talk about storage. In a small apartment, I needed a cheap solution for storing tools, clothes, and some other stuff, including a vacuum cleaner and a set of bicycle tires, for example. A few shelves? Too much for me. So I bought the biggest shelving unit that could fit into one of the niches, and now I store everything there. It's cheap, it's divided by the levels, I have shoes under the shelves and plenty of space left to store something else. The design or the color? I don't care. It looks great to me because it solves so many problems. And I have a living room completely free of all that stuff at once, it's just magic.&lt;/p&gt;
&lt;h2&gt;Filter the demand even more&lt;/h2&gt;
&lt;p&gt;You think you need to buy something and you think you have a budget for that. If you don't buy it, you make some money ('A Penny Saved is a Penny Earned' &amp;copy;). So, it makes sense to invest some effort and ask yourself a few more questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What would I do with it right now?&lt;/li&gt;
&lt;li&gt;Can I do the same with something else I already have?&lt;/li&gt;
&lt;li&gt;What will I throw away after buying it (especially when the item replaces something)?&lt;/li&gt;
&lt;li&gt;Where will I store it?&lt;/li&gt;
&lt;li&gt;Will using it make me happy?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These questions can help you not only avoid buying unnecessary stuff but also can make you buy it later. And future costs are discounted! And I would emphasize using vs. owning because lots of 'lifestyle' gear fall in this category. And yes, you'll never use that 'EDC gear', so don't buy it 'just in case'. You'll manage to get out of any situation with what you have, that's what brains are for. And yes, it may involve some trauma not owing 'some cool EDC gear', but we're on a tight budget, right?&lt;/p&gt;
&lt;h2&gt;Set clear requirements for what you want/need&lt;/h2&gt;
&lt;p&gt;I'm not a fan of 'high-quality stuff', and in many cases, I don't see the difference. If you do so, there's a good buying method called 'technically acceptable/best price'. You need to have some requirements (what is acceptable), and then you buy the item that is the cheapest and fits the requirements. You are welcome to make some market research first to justify your requirements first. But once the requirements are set, you just buy the cheapest option.&lt;/p&gt;
&lt;p&gt;Thus you avoid 'maverick buying'. For example, I want a sandwich maker. I come to the shop and see a sandwich maker for 13 &amp;euro; and... 3-in-1: a waffle maker, a sandwich maker and a grill, which costs 25 &amp;euro;. Maybe it's nice to have 3-in-1, but my requirements were a sandwich maker, so I buy it and save 12 &amp;euro;. These 'optimizing thoughts' right before you buy are great, but they will not allow you to cut the costs. If you have a need, you'd know it when you shape the requirements.&lt;/p&gt;
&lt;p&gt;More than that, sellers often see when you are not sure and use it. Then if you are going to buy a knife you come home with a food processor. Will it make you happy? Perhaps sometime in the future. Will it cut the costs now? Probably not, if &lt;strong&gt;right now&lt;/strong&gt; you need just a knife. By the way, a kitchen knife can substitute a lot of stuff (see 'Buying multi-purpose stuff' above), if you know how to use it. If you have access to YouTube, you can learn that for free, just a few fingers cut off... :)&lt;/p&gt;
&lt;h2&gt;Having a list of needs/wants and prioritizing it&lt;/h2&gt;
&lt;p&gt;We asked the question 'Will using it make me happy?', I didn't want to overcomplicate things right away. But the actual question is 'Will it make me happy than buying anything else?'. It's hard to do this mental exercise for every item, and at the same time if you don't buy something you need to get some satisfaction in exchange, otherwise you just get depressed that you can't afford it.&lt;/p&gt;
&lt;p&gt;The truth is that even if you have a lot of money buying everything at once can put you in the shithole immediately. So, buying everything you want at once is just silly. Getting frustrated about it is silly as well, but quite natural. When we create a 'wish list', we 'do' something about it. And after that, some magic can happen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can decide something different fitting the same need&lt;/li&gt;
&lt;li&gt;You can decide that you no longer have that need&lt;/li&gt;
&lt;li&gt;Someone can ask you: 'What do you want for a birthday?', and you'll have an answer to that&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don't go crazy about my wish lists, they are not very long and they are not prioritized in a spreadsheet. Some items there are just to remember some ideas, which could be useful. And sometimes I tend to delete most of the items from the list. But when I decide to buy something, I look quickly through my wish lists and ask myself: 'Didn't I miss something important?' Choosing can be difficult, and a list makes it a bit easier, so it's better to have one.&lt;/p&gt;
&lt;h2&gt;Eating healthy food&lt;/h2&gt;
&lt;p&gt;I'm not sure that this idea will help anyone, because with food it works differently: sometimes you want to eat something for stress relief, or because you like the taste of it. By no means I'm going to encourage anyone to save on food for safety reasons.&lt;/p&gt;
&lt;p&gt;Still, just knowing some facts can help you save without sacrificing anything:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Usually&lt;/em&gt; eating at home is cheaper and healthier, than in cafes/restaurants&lt;/li&gt;
&lt;li&gt;Cooking at home is cheaper and healthier, than buying semifinished, pre-made food or 'ready to consume' junk food&lt;/li&gt;
&lt;li&gt;Planning your weekly menu can help you eat more balanced food and get better use of the products you buy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Will it stop you the next time you'd like to buy some junk food? No, just go ahead and buy it. It works differently: when knowing this will make you write a shopping list without junk food with a feeling like you're not sacrificing anything, then it works. You'll probably change your mind in the shop, sellers of junk food are good at marketing.&lt;/p&gt;
&lt;h2&gt;Buying used stuff&lt;/h2&gt;
&lt;p&gt;The lifespan of lots of things is more, than two years. Especially for industries, where everything changes not so fast. A few examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bicycles. You can get a bike 2x cheaper for a 2-3 year bike, which will be almost like new.&lt;/li&gt;
&lt;li&gt;Electric appliances. You can even buy a cordless drill with dead batteries. And change the batteries, including non-original options. If it's still cheaper to buy a used one (including the cost for the batteries), there's just no reason to buy a new one.&lt;/li&gt;
&lt;li&gt;Cars and motorcycles &amp;ndash; this can be tricky with hidden defects, but you can cope with that.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One example when that's not applicable is printers. First, the new models are better and they do cost not so much. Second, HP has an 'Instant Ink' program, which is for new printers only. And ink cost is a lot more than the cost of the printer.&lt;/p&gt;
&lt;h2&gt;Postpone costly upgrades&lt;/h2&gt;
&lt;p&gt;Devices like laptops, tablet PCs, and mobile phones cost a lot. There are some options to buy refurbished ones, but still, they cost a lot of money. If they still work and you are on a tight budget, &lt;strong&gt;and&lt;/strong&gt; they are not critical for earning money, I'd suggest postponing the upgrade. You can hope that this 'tight budget' period will end and after that, you'll be able to upgrade. Meanwhile, their price always drops as new models come out, so it makes sense to wait.&lt;/p&gt;
&lt;h2&gt;Buy on the internet&lt;/h2&gt;
&lt;p&gt;When you're on a tight budget, you're not going to buy low-quality staff, and reviews on the websites give you some confidence. When I read those reviews, I understand that I can't imagine all the situations when something doesn't fit my requirements or accidentally breaks down. So reviews are great, and it's better to have some of them, but for the local shops (especially selling private labels stuff) that's not achievable.&lt;/p&gt;
&lt;p&gt;Again, I'd not go crazy ordering everything on the internet. Sometimes I just feel that on the internet I could have something that fits my needs better. It may be cheaper, it may be more expensive, but I need to be sure. For lots of items, my requirements are not that complicated and then I can buy it in a local shop when they have that item. Delivery also is costly, by the way.&lt;/p&gt;
&lt;p&gt;But delivery is great when they deliver a 15 kg package of dog food to your door. No way I'd be carrying that myself.&lt;/p&gt;
&lt;h2&gt;Summing up&lt;/h2&gt;
&lt;p&gt;I hope you found some tips useful for you, please let me know in the comments. Saving for me is not a sacrifice with these tips, it's about being happier with the stuff I buy. And I also hope that it works the same way for you!&lt;/p&gt;</content><category term="blog"></category><category term="productivity"></category></entry><entry><title>Commuting on a bike: adventures begin</title><link href="https://en.kovchinnikov.info/2023-03-commuting2.html" rel="alternate"></link><published>2023-03-25T22:31:00+01:00</published><updated>2023-03-25T22:31:00+01:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-03-25:/2023-03-commuting2.html</id><summary type="html">&lt;p&gt;Cycling stopped being smooth and cheap&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Costs&lt;/h2&gt;
&lt;p&gt;In case you missed it, here's a link to &lt;a href="2023-02-commuting.html"&gt;part 1 of my commuting experience&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's too boring to write about cycling as a cheap, effortless, and effective hobby, let's count the bucks. It all started when my rear tire ended unexpectedly. I managed to borrow 'a grandpa's bike' from my friend for free till the new tire arrived in three days, but for the few past weeks there were some costs:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;So, the tire&lt;/li&gt;
&lt;li&gt;For one day I bought a ticket to the train&lt;/li&gt;
&lt;li&gt;My dog destroyed my pants and my windbreaker, which was only 15 years old, so I had to buy a new stuff&lt;/li&gt;
&lt;li&gt;The new tire required pressure of 6-8 bar, I managed to make 6 and damaged my pump, so I had to buy &lt;a href="https://www.amazon.de/dp/B094TXY2CD?ref=ppx_yo2ov_dt_b_product_details&amp;amp;th=1"&gt;a new one&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I decided to buy &lt;a href="https://www.amazon.de/dp/B00VGEF18A?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details"&gt;a front rack&lt;/a&gt; for my backpack&lt;/li&gt;
&lt;li&gt;To keep my back clean, I had to buy &lt;a href="https://www.amazon.de/dp/B0BD254L15?psc=1&amp;amp;ref=ppx_yo2ov_dt_b_product_details"&gt;a mudguard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I bought grease for the bearings and a degreaser to wash the bike&lt;/li&gt;
&lt;li&gt;I also bought a chain cleaning kit&lt;/li&gt;
&lt;li&gt;As my new pants fell off, I bought a belt&lt;/li&gt;
&lt;li&gt;Chain grease&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You see, it's not cheap &amp;ndash; and all that in less than a month! The truth is that you have to keep a lot of tools just to keep your bike rolling. I didn't expect that, but it was too late to surrender... The service doesn't work in the evening, it's expensive and the next day I have to go, but I don't like the train. &lt;/p&gt;
&lt;h2&gt;Fitting the stuff&lt;/h2&gt;
&lt;p&gt;To fit the front rack I had to disassemble my front brake partially, but even after that, the handlebar is not turning well. That's the price of being stylish and not liking the back pannier rack. My backpack fits the rack only when the backpack is flat. Life is a pain, and I try to embrace it.&lt;/p&gt;
&lt;p&gt;The mudguard was designed to fit only on bikes with disk brakes, and that's not my case. I managed to fit it from the inside of the frame, and it works great with a weight of only 20 grams. I don't get any mud from the front wheel and I get only minor mud on the lower part of my pants from my rear wheel now, so now they let me go to decent places after the ride.&lt;/p&gt;
&lt;p&gt;I bought a back jacket with a tight fit, and it's so much better than the windbreaker. For the pants, my demands are quite high, because I don't like lycra and I'd like to have a tight fit, a civil look, and a durable material. I've seen slim-fit jeans on some BMX riders and I had some doubts, but they worked great. These jeans are stretchy and they don't touch the chain. Maybe I attract some more attention &amp;ndash; I don't know as there are mostly old ladies in my town. And I don't care.&lt;/p&gt;
&lt;h2&gt;Surpise&lt;/h2&gt;
&lt;p&gt;In Germany, you can get compensation for riding a bike, so I got 132 &amp;euro; for riding 600&amp;nbsp;km per month. Why's that?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You get healthy, and that's important here&lt;/li&gt;
&lt;li&gt;You need to buy some stuff for the bike (please see the list above), and for electric bikes, the costs are higher&lt;/li&gt;
&lt;li&gt;The cars are compensated as 0.2 &amp;euro; per km, and as Germany supports clean transport, maybe that would be strange to pay less for riding the bike&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For this amount of money, you can get a (very nice) used bike every month, but nobody would ride 30&amp;nbsp;km every day on such a bike. How does it feel? Well, not so nice, especially because of the saddle. I rode a 'grandpa's bike' which I borrowed for three days, so I put the saddle high and my arms as low as possible. It took me 1 hour to ride the same distance, which took 40-45 minutes on my bike (50 minutes in relaxed mode). And I was so happy to get my bike back!&lt;/p&gt;
&lt;h2&gt;Disassembly&lt;/h2&gt;
&lt;p&gt;After a few showers of rain, I felt that there was no grease in the bearings inside the hubs, so I decided to disassemble them. It took me 3 hours to wash the bike, wash the chain twice (as it was too dirty), disassemble the hubs, grease the hubs, grease the chain, and after all that clean my flat of all the mess. By the way, I had some more things to do that day.&lt;/p&gt;
&lt;p&gt;I found several issues during the disassembly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The chain was in a bad condition, it was stretched and twisted&lt;/li&gt;
&lt;li&gt;The rear hub was damaged because of my riding style, there were clear impact marks from the bearings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'll talk a bit about the root causes for that below, but I'd like to outline two points here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After the rain, my bike is covered with sand, maybe because I'm near the sea&lt;/li&gt;
&lt;li&gt;Proper chain grease makes a huge difference under the rain, as a cheap one gets washed out during the first 5 minutes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of that might sound sad, but after the assembly, the bike runs surprisingly well, smoothly, and effortlessly. Especially without the wind of 95&amp;nbsp;km/h. I think it will die soon though, just because it's a singlespeed.&lt;/p&gt;
&lt;h2&gt;Consistency&lt;/h2&gt;
&lt;p&gt;OK, but what does it take to ride a bike 30&amp;nbsp;km per day? From my viewpoint it's all about consistency:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Eating habits&lt;/li&gt;
&lt;li&gt;Sleeping habits&lt;/li&gt;
&lt;li&gt;Cleaning and greasing the bike&lt;/li&gt;
&lt;li&gt;Stretching and massaging&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The bad scenario looks like this: you forget to check the bike, get late to sleep, have no time to stretch and eat in the morning, and at the end, you struggle, although this 30&amp;nbsp;km ride can be quite enjoyable. The bike works well in a narrow range of setups, and so does the body, if you want optimal performance.&lt;/p&gt;
&lt;p&gt;I wipe the chain every day because otherwise, the chain gets greasy, then the sand sticks to it and the sand destroys the chain very quickly. Now I started to see the point in kevlar belts instead of the chain. And I also try to get a healthy breakfast every morning.&lt;/p&gt;
&lt;h2&gt;Is signlespeed good for commuting?&lt;/h2&gt;
&lt;p&gt;What's wrong with the bike though? I think, a singlespeed is just not designed to fit commuting of my type and my riding style:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The winds make me push the chain harder, as I don't have a lower gear&lt;/li&gt;
&lt;li&gt;High tire pressure and a rough city terrain hit the hub, and it also makes riding uncomfortable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, I'm going to change the bike. See you in the next part, where I'll share some findings from exploring the market.&lt;/p&gt;</content><category term="blog"></category><category term="cycling"></category></entry><entry><title>Use cases for opensource apps in business</title><link href="https://en.kovchinnikov.info/2023-03-opensourceusecases.html" rel="alternate"></link><published>2023-03-22T17:31:00+01:00</published><updated>2023-03-22T17:31:00+01:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-03-22:/2023-03-opensourceusecases.html</id><summary type="html">&lt;p&gt;Several examples of opensource apps in a corporate environment&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Some opensource apps are old, and with rapid technology development, we all hoped that some new great apps would evolve. But the reality is that the 'good old apps' I used more than 8 years ago are still here, and they are still a reasonable choice for several tasks. The key to implementing a business app in a corporate environment, from my viewpoint, is not in the app itself, but in the business process around it.&lt;/p&gt;
&lt;p&gt;So, in this article I'll cover two 'apps of choice' for me, which I used several times:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dokuwiki.org/dokuwiki"&gt;Dokuwiki&lt;/a&gt;, a wiki&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mantisbt.org/"&gt;Mantis&lt;/a&gt;, a bug tracker&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;They are both written in PHP (oh, my...), but they are both still alive. So, the use cases for these apps are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A knowledge database using a wiki,  I had 3 of these&lt;/li&gt;
&lt;li&gt;A task management system using a bug tracker&lt;/li&gt;
&lt;li&gt;A claims management system using a bug tracker&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;A knowledge base using wiki&lt;/h2&gt;
&lt;p&gt;The requirements are quite simple: make knowledge inside a consulting company available to the staff, because when you stop 'reinventing the wheel' on every project it costs less and involves fewer risks. I saw a knowledge database that failed because of access issues. If you want maximum leverage of the knowledge, you have to make it a priority to maximize the usage:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make the knowledge accessible to everyone&lt;/li&gt;
&lt;li&gt;Make it easy to contribute for everyone&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It becomes a complicated issue in a big company, and I didn't have this problem in my case. If you are restricting access, I'd consider two questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is this information so valuable and easily applicable to other companies?&lt;/li&gt;
&lt;li&gt;If someone wants to steal this information, are there easier ways to do that?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ok, that was a preface, the real work starts with building the business processes around the knowledge base. What are they? I prefer to keep things simple, so I start with the two processes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Input, or collecting the knowledge&lt;/li&gt;
&lt;li&gt;Output, or using the knowledge&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, if you want to maximize the leverage of the work accomplished (and the knowledge you have), then 'can' turns into 'should': we should connect the knowledge from particular phases and we should use it first when we are looking for the solution on other projects.&lt;/p&gt;
&lt;p&gt;You could have separate processes for that, but the easiest way is to get current processes and instead include this Input and Output as procedures in particular places. Thus it's a change and it requires less effort to implement.&lt;/p&gt;
&lt;p&gt;What's different about these 'knowledge database-related' processes and procedures is that people get excited about collecting useful knowledge for the team. So making a 'top contributors' list is a good idea to encourage them.&lt;/p&gt;
&lt;h2&gt;A task management system using a bug tracker&lt;/h2&gt;
&lt;p&gt;Every organization has a kind of workflow and task management tasks that fall outside the scope of specific systems like ERP (enterprise resource management systems). Now we have BPM (business process management) systems, that allow us to construct almost any kind of process, and further automate some of the functions inside the process. The question is: can this be simplified? I tried to simplify this, and it worked, and the main idea is the following.&lt;/p&gt;
&lt;p&gt;What if we say that we won't construct a process out of &lt;strong&gt;any&lt;/strong&gt; fantasies, but instead use &lt;strong&gt;a template&lt;/strong&gt;: someone starts an action, it should be approved, assigned, executed, and controlled. It could be different, but it &lt;strong&gt;should&lt;/strong&gt; be something similar. And we could have several templates, but let's just get the idea with one. It works as simple as that for 90-95% of cases, then why should you pay more?&lt;/p&gt;
&lt;p&gt;If you can fit the majority of your processes, then... welcome to the world of bug trackers! You do not need a BPMN system, you could have issues, issue statuses, and comments (with some attachments), which is dead simple and deadly effective.&lt;/p&gt;
&lt;p&gt;What modifications of the bug tracker are required for that? Well, none, as the names of the statuses can be changed. What you need to do is to agree on the status sequence and develop a business process model to use these statuses. Here's an example:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Someone raises (creates) an issue&lt;/li&gt;
&lt;li&gt;Some boss approves the execution&lt;/li&gt;
&lt;li&gt;An issue is assigned (or picked up)&lt;/li&gt;
&lt;li&gt;When an executor reports that the issue is done, the issue can be closed OR&lt;/li&gt;
&lt;li&gt;An issue is checked by someone else and closed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Mantis is one of the simplest systems. What's important: first, it's stable and it works and, second, it allows to have a kind of forum/discussion for each issue with file attachments. This history of issue execution was vitally important for the business.&lt;/p&gt;
&lt;h2&gt;A claims management system using a bug tracker&lt;/h2&gt;
&lt;p&gt;A claims management system has several differences from the workflow described above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's initiated by the customer&lt;/li&gt;
&lt;li&gt;Customers and client managers are usually not very specific about the issue, i.e. they do not provide enough information at once&lt;/li&gt;
&lt;li&gt;Issue execution (an investigation) usually gets stuck at some point and needs a push from someone, but the bosses are too busy, right?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Having an issue number and an SLA (Service Level Agreement) regarding issue resolution are highly valued by the clients. The first is provided by any bug tracker. What I like about Mantis, is that it has an overview with the 'latest activity' timestamp, so the SLA can be controlled and an issue can be escalated. But we have several questions still:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Who should ensure that the issue is described fully enough to start the execution? Otherwise, the system and the process will be overwhelmed with issues missing some important information.&lt;/li&gt;
&lt;li&gt;Who will ensure, that issues do not get stuck? And, by the way, those issues are closed, which also cleans the list of issues for everyone.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's simple: you need someone for that. We called that person 'a claims engineer' and she wasn't subordinate to anyone participating in the process. She could reply 'you need to provide more information' to the client's managers and she could escalate issues, that were stuck. And it just worked.&lt;/p&gt;
&lt;p&gt;It seems a bit more complicated process, but the fact is that even Mantis allowed us to implement this process without any modifications, just using the statuses. But with a business process model, a procedure description and a proper training for everyone involved, of course.&lt;/p&gt;
&lt;p&gt;We had a few ideas to develop this further:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We could conduct a periodical analysis to enhance the processes, that lead to claims&lt;/li&gt;
&lt;li&gt;We could investigate, who was in charge of the consequences and provide feedback for that person (sorry for the 'managerial' language here, I hope you got the idea)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the tech side, we could download the statistics from the Mantis database, build some reporting, and make some conclusions. The structure of the database allows you to do that, because... it's dead simple as well.&lt;/p&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;I prefer the lean approach, and the simplest solutions work cost-effectively. What I love about bug tracker systems, is that they got through a long evolution, and they are feature-rich, stable, scalable, and nice to work with. At first, they can be a bit awkward to use for 'business' people (yes, the 'managers'), but no one could ever raise any particular issue about that. An old-fashioned interface? Well, it works. Not too much AJAX? Fortunately, 'business' people don't know these words. Everyone was quite happy about those systems and I hope they are still in place.&lt;/p&gt;</content><category term="blog"></category><category term="opensource"></category></entry><entry><title>Spending a Christmas eve installing Linux on an old laptop</title><link href="https://en.kovchinnikov.info/2023-03-linuxlaptop.html" rel="alternate"></link><published>2023-03-12T12:17:00+01:00</published><updated>2023-03-12T12:17:00+01:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-03-12:/2023-03-linuxlaptop.html</id><summary type="html">&lt;p&gt;Is an old laptop any good for Linux and working&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Spoiler&lt;/h2&gt;
&lt;p&gt;Right before Christmas (here in Germany it's Catholic) I found an old Laptop under the rain. Someone was moving, and some good stuff was on the ground for a day. I searched a little and found a power supply. At home this laptop revealed that it's fully functional Fujutu Amilo La1703:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2Gb RAM&lt;/li&gt;
&lt;li&gt;AMD Sepron 1 GHz, single-core&lt;/li&gt;
&lt;li&gt;80 Gb HDD&lt;/li&gt;
&lt;li&gt;CD Drive&lt;/li&gt;
&lt;li&gt;Win Vista pro with German interface, not activated&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not bad, right? Well, for my childhood that was great and you could do just anything with it. But how do we judge devices now? Wi-Fi should work and it should play YouTube. Well, I didn't get that and gave this laptop to my friend to install some old Windows version. Why's that? Well, everything working and not working is described on &lt;a href="https://wiki.ubuntu.com/LaptopTestingTeam/FujitsuAmiloLa1703"&gt;this Ubuntu page&lt;/a&gt;, and I couldn't get any better. The device is so old, that some links from this page don't work.&lt;/p&gt;
&lt;p&gt;The process was interesting though because I tried different distributions and they performed surprisingly for me. Some were surprisingly good, some were surprisingly bad. As I'm not religious and Win10 has relatively modest system requirements, I tried to install it as well (several times). If you want to learn about this process and some unexpected outcomes, that's what this post is about.&lt;/p&gt;
&lt;h2&gt;Linux distributions&lt;/h2&gt;
&lt;p&gt;For those who don't know, you have 64 and 32-bit options, but not for all the distributions. This laptop supports 64-bit, but as it has 2Gb&amp;nbsp;RAM, a 32-bit distro could fit well. Unfortunately, Fedora (one of my favorites) and Ubuntu don't support 32-bit anymore, so I had to try the 64-bit versions. So, I tried:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 64-bit&lt;/li&gt;
&lt;li&gt;Debian 32-bit&lt;/li&gt;
&lt;li&gt;Fedora 64-bit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The quest was to make this device work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Graphics&lt;/li&gt;
&lt;li&gt;Wi-Fi&lt;/li&gt;
&lt;li&gt;Sound&lt;/li&gt;
&lt;li&gt;Play YouTube&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regarding graphics, it worked in Debian, but with the wrong resolution. Installing openchrome drivers helped a lot, but I didn't get performance to play YouTube without tearing the video even on the lowest resolution. Fedora installed openchrome at once with the right resolution &amp;ndash; great job! Ubuntu couldn't launch X, I played with X11 config a bit &amp;ndash; but no luck here even with the openchrome installed. So I didn't move further with Ubuntu.&lt;/p&gt;
&lt;p&gt;Wi-Fi is supported on this device on Linux only via ndiswrapper. This means that you find Windows drivers and compile a kernel module to use it. This device has 32-bit and 64-bit Windows drivers, but only 32-bit drivers are supported by ndiswrapper. As Fedora is 64-bit only, I get a "Bad magic" error, when I try to use 32-bit drivers on a 64-bit system. And that's the best result so far, as in Debian I couldn't install ndiswrapper!&lt;/p&gt;
&lt;p&gt;No drama connecting to the Internet here, as this laptop is relatively heavy and large, and the battery is dead, it can be used more as a "movable" laptop (like switching off and moving to another location), than as a "portable" or "mobile". And it has an Ethernet port, so I could connect it to my router. By the way, no drivers were required for Ethernet in any distro. If you need a workaround, you could get a Wi-Fi dongle in this case, one Linux supported. They are relatively cheap.&lt;/p&gt;
&lt;p&gt;Ok, so how's about sound? Well, it worked exactly as described: very silent and only using the headphones. In Linux you can "overamplify", but the sound quality suffers. The pleasant surprise here is that it worked without any effort with PulseAudio. I installed some ALSA tools, but it didn't change anything. OSS drivers (a relic sound system) support this device, but the drivers are so old &amp;ndash; I didn't find a way to install them on any system.&lt;/p&gt;
&lt;p&gt;Ok, we have Ethernet, and we have some video drivers (without acceleration, by the way). So, what about YouTube? Well, it plays with a tearing. By the way, as Fedora is 64-bit I could install Google Chrome on that and expect a better experience with Google and YouTube sites. On Debian, I could use Chromium. Nevertheless, YouTube is unusable in any distro or browser. Maybe digging a bit more into video acceleration could fix this, but openchrome drivers are not developed and the website with VIA Linux video drivers is not here anymore.&lt;/p&gt;
&lt;p&gt;You can install LXDE and have a nice desktop experience though. And with Fedora Google Chrome works fine, as well as any other 64 bit modern apps. Ok, let's move on to Windows.&lt;/p&gt;
&lt;h2&gt;Win10 installation experience&lt;/h2&gt;
&lt;p&gt;As this laptop passes Win10 requirements and I had quite a positive recent experience installing Win10 on a 10-year-old laptop, I decided to give Win10 a try. To optimize performance you could:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Turn off everything affecting performance, except for fonts anti-aliasing&lt;/li&gt;
&lt;li&gt;Use some &lt;a href="https://christitus.com/debloat-windows-10-2020/"&gt;debloating software&lt;/a&gt; to make it even quicker&lt;/li&gt;
&lt;li&gt;Make &lt;a href="https://www.youtube.com/watch?v=dvi1cF9Nqfk"&gt;some Win10 installation image yourself&lt;/a&gt;, as I don't trust unofficial distributions &amp;ndash; but it's time-consuming and you'll need another Windows machine&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Does it start the installation? Well, yes, using &lt;a href="https://www.youtube.com/watch?v=o4ilMAAk1Q8"&gt;one workaround&lt;/a&gt;. Did it install? No, I was stuck with the "Just a moment" screen, and some "out of the box experience" (OOBE) errors. I tried different ways: booting into the safe mode, disabling some settings in the registry, and it didn't work. The fun fact though is that Windows struggled with the same wrong resolution issue, which was not present in Fedora. And Windows needed drivers, which were available on the Fujitsu website (great!). But OOBE didn't allow me to finish the installation, so I surrendered after a few attempts. OOBE was quite frustrating.&lt;/p&gt;
&lt;h2&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;Trying to make this laptop work was an adventure for me and I learned a lot. More than that, I felt a kind of nostalgia for playing with it. I started playing with FreeBSD in 1999. Wait... I could try installing FreeBSD on this Fujitsu!&lt;/p&gt;
&lt;p&gt;OK, what can you do with it now if it doesn't play YouTube? I don't think working with Google Docs would be a pleasant experience, but on a PC like this or even worse I could type my diploma study and have a PDF using LaTeX.&lt;/p&gt;
&lt;p&gt;It's a pity we judge devices by YouTube playing, but that's it. I think it's great that YouTube now possesses lots of free educational resources, so I agree that it's an important use case for entertainment and work.&lt;/p&gt;
&lt;p&gt;This laptop could be something like a "typewriter" for someone interested in writing articles (for publishing in PDF or a blog) and... maybe interested in retro-gaming. That's the frontier for this laptop. But the 1 GHz processor... Man, that was fast... At least 15 years ago...&lt;/p&gt;
&lt;p&gt;OK, it's not that bad! If you have some more fast computers, you could have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A remote terminal, using X (native), or other servers like X2Go or FreeNX&lt;/li&gt;
&lt;li&gt;A TFTP client, which doesn't use HDD&lt;/li&gt;
&lt;li&gt;A combination of the two above&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That was a "happy hacking" experience for sure... Something I miss with everything around "just working" nowadays, ha-ha!&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category></entry><entry><title>What commuting on a bike feels like</title><link href="https://en.kovchinnikov.info/2023-02-commuting.html" rel="alternate"></link><published>2023-02-22T20:00:00+01:00</published><updated>2023-02-22T20:00:00+01:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-02-22:/2023-02-commuting.html</id><summary type="html">&lt;p&gt;Based on my experience cycling for 3 weeks&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;I'm living in Esens (Northern Saxony in Germany) and studying in Wittmund. I chose to commute by bicycle, every day during a working week. Here's my route:&lt;/p&gt;
&lt;p&gt;&lt;img alt="My route" src="images/commuting_route.png"&gt;&lt;/p&gt;
&lt;p&gt;That involved significant changes in my life, so in this article, I'm going to cover the following topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Transportation&lt;/strong&gt; &amp;ndash; is it feasible to get from point A to point B on a bike in a predictable time?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Weather&lt;/strong&gt; &amp;ndash; does it matter so much?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Influence to the body&lt;/strong&gt; what happens to you if you commute 30 km a day for 3 weeks?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ok, let's move on.&lt;/p&gt;
&lt;h2&gt;Transportation&lt;/h2&gt;
&lt;p&gt;I could choose a train, at a first glance the time is almost the same:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;45 minutes on the train (walk 15 minutes, then 15 minutes on the train, then walk 15-20 minutes again)&lt;/li&gt;
&lt;li&gt;40-50 minutes or 1 hour on a bike;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are a few concerns though regarding the time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On the way back the train departs at 12:40, and I finish studying at 12, so at that time I could be at home already if I take a bike.&lt;/li&gt;
&lt;li&gt;The winds influence the time, my negative record is 2 hours, and I felt exhausted after that.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The cost is not a concern for me, because if I take a train, I get compensated. The costs for bike maintenance are little. I was afraid of mechanical issues with the bike, none of them for 3 weeks though. Just clean and lube the chain, and pump the tires before the rides every week or so. A bonus number 1 is that you're not tied to the train's schedule, if you have to do anything in Wittmund it's not a problem, and you can leave any time on the bike. A bonus number 2 is that on the bike you can do more in Wittmund.&lt;/p&gt;
&lt;p&gt;Walking and taking a train is a bit depressing for me, while on the bike the landscape is always different: the fog, the sunrise, etc. The ride depends on you and you are interacting with the world around you.&lt;/p&gt;
&lt;h2&gt;Weather&lt;/h2&gt;
&lt;p&gt;The first question all the cyclists get is: is the rain so important? Well, for three weeks I was under the rain once, but it was an ice rain. I could just wait for half an hour or an hour, but I decided to ride. It was cold, but I knew I could tolerate that for 1 hour. I got home, took a warm bath, and... nothing happened. The trick here is that it rains, but not the time I ride. Usually, it rains at night and that's fine for me.&lt;/p&gt;
&lt;p&gt;But the winds are important. Now I have a singlespeed, so I can't switch the gear down. Sometimes I return fully exhausted after fighting with the wind. But the direction of the wind matters. Winds can be up to 95 km per hour, but strong winds blow only from the North. My destination is in the South, so I always come to my destination on time. On the way back I'm not in a hurry, I can walk. But the wind matters only in open spaces. For the whole distance, I have two such spaces about 800 m each. I see this as a challenge, and if you can tolerate the wind, you can tolerate a lot.&lt;/p&gt;
&lt;p&gt;It wasn't cold, the lowest temperature is -2&amp;#8451;. Usually, it's above 0, so I put on my thermal T-shirt with a long sleeve and a windbreaker. At first, it's not comfortable, but then I warm up. When it's cold, I add a pullover and that's all.&lt;/p&gt;
&lt;h2&gt;Body&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://komonews.com/news/coronavirus/study-finds-one-habit-can-significantly-lower-your-odds-of-getting-sick-from-covid-19-coronavirus-pandemic-variants-exercise-illness-infection-diseases-virus-doctors-hospital-health"&gt;study suggests&lt;/a&gt; that exercises can significantly lower your odds of getting sick from COVID-19.&lt;/p&gt;
&lt;p&gt;The next is that when I ride in the morning, I awaken and get ready for intensive study. But in the long term, it's also energizing and raising the mood. More than that, it helps me to overcome other hard challenges. For example, I'm looking for a job now, and this involves writing a lot of cover letters and getting refused. That really can make anyone feel upset, so cycling helps a lot.&lt;/p&gt;
&lt;p&gt;What nobody is saying about cycling is that when you stop you're feeling cold. At first, you feel hot, but then the body starts to cool down until you feel really cold if you don't dress up or grab a hot drink. &lt;/p&gt;
&lt;p&gt;The body adopts if you cycle regularly and dress up properly: it almost stops sweating. I get a sweat on my back because I'm riding with a backpack. And a rack to hold this backpack is the next upgrade I'm going to make. Shoulders feel also uncomfortable because of that. Regarding muscles, especially those heavily involved in cycling, stretching and massage roller are your best friends and then you get no issues.&lt;/p&gt;
&lt;p&gt;In the third week, I started to feel hungry. Like I'm eating my usual lunch and after that, I'm still hungry. It's normal, as I burn more calories. It's also better to eat more often.&lt;/p&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;Is it worth trying? Sure! Is it accurate in terms of time? Well, it depends, and sometimes it's not.&lt;/p&gt;
&lt;p&gt;I'm not giving any advice here, just sharing some of my own experiences. Lots of advice from YouTube helped me though, including bike ergonomics, and eating (before/after/while cycling), but one piece of advice was outstanding. It was from a guy riding hundreds of kilometers. His video &lt;a href="https://www.youtube.com/watch?v=x7a5fQk2yvA"&gt;The Most Important Factor for Long Distance Rides/AUDAXs&lt;/a&gt; is great. And the advice is really simple: don't concentrate on the distance or on the time, just enjoy riding!&lt;/p&gt;</content><category term="blog"></category><category term="cycling"></category></entry><entry><title>Choosing a web hosting at the end of 2022</title><link href="https://en.kovchinnikov.info/2023-02-hosting.html" rel="alternate"></link><published>2023-02-19T19:15:00+01:00</published><updated>2023-02-19T19:15:00+01:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2023-02-19:/2023-02-hosting.html</id><summary type="html">&lt;p&gt;Web hosting adventures and analysis&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;I hosted my projects at Dreamhost (and I'll not provide the link on purpose), so I was quite happy with the service and paid 100-120 USD yearly, which included two domains and shared web hosting. But then I encountered this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="My current hosting plan" src="images/hosting-old.png"&gt;&lt;/p&gt;
&lt;p&gt;Why's that? Why do I have to pay 156 USD for the same service? It's not about inflation, for sure. Well, the answer was on the front page of the same hosting provider &amp;ndash; hosting plans for the new customers:&lt;/p&gt;
&lt;p&gt;&lt;img alt="New hosting plan offerings" src="images/hosting-new.png"&gt;&lt;/p&gt;
&lt;p&gt;So, new customers pay 36 USD for the same service and they can do it monthly! Who's paying for that? Old loyal customers like me! And it's the same for the other providers, so I had to find a &lt;strong&gt;real&lt;/strong&gt; alternative.&lt;/p&gt;
&lt;h2&gt;The Alternatives&lt;/h2&gt;
&lt;p&gt;So, I found the following alternatives:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cloud services like AWS and Google Cloud&lt;/li&gt;
&lt;li&gt;Static hostings at &lt;a href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; and &lt;a href="https://pages.cloudflare.com/"&gt;Cloudflare Pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Technically, you also need domain hosting to park your domains somewhere and point to your actual hosting, and Cloudflare or Google Domains offer this service.&lt;/p&gt;
&lt;p&gt;But let's first look at the requirements.&lt;/p&gt;
&lt;h2&gt;The Requirements&lt;/h2&gt;
&lt;p&gt;I had some sites requiring PHP and SQL databases, but I doubted whether I needed these sites. Ok, what would happen if I stop them? How many people were using them? The answers were "nothing" and "two" accordingly, so I decided to back up one website and send the backup to another user.&lt;/p&gt;
&lt;p&gt;So, static websites were quite sufficient for my needs, but is that all about requirements? Well, I got used to updating my websites using git, so...&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;You can host dynamic and static websites using cloud services. The drawback? You have to install the operating system and software yourself, configure it and protect it against attacks, and so on.&lt;/p&gt;
&lt;p&gt;With static hostings, you can host static pages only, but it's free, and they manage all the operating system/web server/security issues themselves.&lt;/p&gt;
&lt;p&gt;I had one particular question, which made me choose GitHub over Cloudflare for pages hosting: how do I host several websites for different domains? GitHub docs got this topic covered, but I didn't find the answer in Cloudflare Pages' docs.&lt;/p&gt;
&lt;p&gt;And I also chose Cloudflare for DNS hosting as it's free for personal use.&lt;/p&gt;
&lt;p&gt;So, the transit was the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Move domains to Cloudflare&lt;/li&gt;
&lt;li&gt;Move pages to GitHub&lt;/li&gt;
&lt;li&gt;Connect pages on GitHub and domains at Cloudflare&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That's all. I paid some fees for domain transfer, and I also had to pay for my domains for another year, but that's a lot less than 156 USD. The timeframe was tight, so my plan B was to pay for another month and finish this procedure. Technically domain transfer takes some time, but all went well, and &amp;ndash; bye, shared web hosting!&lt;/p&gt;
&lt;h2&gt;P.S.&lt;/h2&gt;
&lt;p&gt;And Dreamhost also charged me an additional 17 USD for domain registration. Yes, it was in the contract.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Doiman fee" src="images/hosting-due.png"&gt;&lt;/p&gt;</content><category term="blog"></category><category term="hosting"></category></entry><entry><title>Cooking Linux the right way: Vim and Emacs</title><link href="https://en.kovchinnikov.info/2022-09-linux-5.html" rel="alternate"></link><published>2022-10-20T10:17:00+02:00</published><updated>2022-10-25T21:12:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2022-10-20:/2022-09-linux-5.html</id><summary type="html">&lt;p&gt;Vim and Emacs for Markdown, HTML, and note taking&lt;/p&gt;</summary><content type="html">&lt;p&gt;OK, let's talk about Linux superpowers. Vim's superpower is to move fast, really fast. To edit by commands with single keystrokes, cut, paste, find &amp;amp; replace the text at a maximum speed. Yes, there's some learning curve, but you can start with Vim mode in some editors and IDE and after learning Vim make use of Vim keystrokes in other programs, including Chromium, for example. Navigating and editing with the keyboard, without using a mouse will be faster.&lt;/p&gt;
&lt;p&gt;Emacs' superpower is that you can get further than customizing, you can re-write the behavior of the editor using Lisp. As a demo of this deep customization or re-writing capabilities, you can use the Evil mode, which emulates Vim inside Emacs well. Emacs have modules for RSS reader, Telegram client, Media player, Email and Newsreader, IRC client, and more. The question with Emacs is actually "What do you want from it?"&lt;/p&gt;
&lt;p&gt;Vim and Emacs are different regarding approaches to text editing: Vim is like "The editor does exactly what I type", while Emacs is more "Let me do that for you", like inserting closing parenthesis, formatting text, etc. But both editors are customizable to the extent that you can have &lt;strong&gt;almost&lt;/strong&gt; the same behavior. Both have file managers nowadays. Emacs is an integrated environment to suit all your needs, while Vim sticks to the standards and there's an advanced mode to use Vim, (which I'll cover in this article) with a terminal multiplexer. To demonstrate the superpowers I'll take three use cases Markdown, HTML, note taking. I'm not a programmer and that's what I use on a day-to-day basis. I worked in Vim and Emacs for several months like 8 hours a day, so it's not a first impression.&lt;/p&gt;
&lt;p&gt;Emacs is better as a GUI app, and Vim, from my viewpoint, is better in a terminal. Thus Vim has a life hack: if you have to work in Windows and you don't have privileges to install programs, you can install &lt;a href="https://gitforwindows.org/"&gt;Git for Windows&lt;/a&gt;. Vim is included, so you can install any plugins and customize Vim further.&lt;/p&gt;
&lt;p&gt;I'll provide very basic configs I use, and I'd recommend learning both text editors, they are nice. When you are bothered, you can switch and have fun. :) For each use case, I'll try to describe briefly some useful functions.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: left;"&gt;&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Vim&lt;/th&gt;
&lt;th style="text-align: left;"&gt;Emacs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Notes&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;a href="https://github.com/vimwiki/vimwiki"&gt;VimWiki&lt;/a&gt;, &lt;a href="https://nvim-orgmode.github.io/"&gt;Orgmode.nvim&lt;/a&gt;, &lt;a href="https://github.com/nvim-neorg/neorg"&gt;Neorg&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;a href="https://orgmode.org/"&gt;Org mode&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;HTML&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;a href="https://github.com/mattn/emmet-vim"&gt;Emmet&lt;/a&gt;, &lt;a href="https://github.com/SirVer/ultisnips"&gt;Snippets&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;HTML mode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: left;"&gt;Markdown&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;a href="https://github.com/preservim/vim-markdown"&gt;Vim-markdown&lt;/a&gt;, &lt;a href="https://github.com/SirVer/ultisnips"&gt;Snippets&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: left;"&gt;&lt;a href="https://jblevins.org/projects/markdown-mode/"&gt;Markdown mode&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Initial setup&lt;/h2&gt;
&lt;p&gt;My configs are quite short, let's look at them, and then I'll explain everything line-by-line. So, my Vim config is the following&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;syntax&lt;/span&gt; enable
&lt;span class="k"&gt;colorscheme&lt;/span&gt; monokai
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;wrap&lt;/span&gt; &lt;span class="nb"&gt;linebreak&lt;/span&gt; &lt;span class="nb"&gt;nolist&lt;/span&gt;
&lt;span class="k"&gt;call&lt;/span&gt; plug#begin&lt;span class="p"&gt;()&lt;/span&gt;
  Plug &lt;span class="s1"&gt;&amp;#39;itchyny/lightline.vim&amp;#39;&lt;/span&gt;

  Plug &lt;span class="s1"&gt;&amp;#39;SirVer/ultisnips&amp;#39;&lt;/span&gt;
  Plug &lt;span class="s1"&gt;&amp;#39;honza/vim-snippets&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:UltiSnipsExpandTrigger&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;tab&amp;gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:UltiSnipsJumpForwardTrigger&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;c-b&amp;gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:UltiSnipsJumpBackwardTrigger&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;c-z&amp;gt;&amp;quot;&lt;/span&gt;

  Plug &lt;span class="s1"&gt;&amp;#39;plasticboy/vim-markdown&amp;#39;&lt;/span&gt;
  Plug &lt;span class="s1"&gt;&amp;#39;godlygeek/tabular&amp;#39;&lt;/span&gt;
  Plug &lt;span class="s1"&gt;&amp;#39;mattn/emmet-vim&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;call&lt;/span&gt; plug#&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;laststatus&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; 
  &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;langmap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ&lt;span class="p"&gt;,&lt;/span&gt;фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz
  &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;conceallevel&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And this is my Emacs config file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;scroll-bar-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;tool-bar-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;menu-bar-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;default-frame-alist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;undecorated&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;inhibit-startup-screen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;dired-listing-switches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-laGh1v&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;setq-default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;word-wrap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;sentence-end-double-space&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;custom-set-faces&lt;/span&gt;
&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:family&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Source Code Pro&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:foundry&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ADBO&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:slant&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;normal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:weight&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;semi-bold&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:height&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;132&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:width&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;custom-theme-load-path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/.emacs.d/themes/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;load-theme&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;monokai&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;package&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;package-archives&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;melpa&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://melpa.org/packages/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;custom-set-variables&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;menu-bar-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;package-selected-packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;use-package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;reverse-im&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;markdown-mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;tool-bar-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;use-package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;reverse-im&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;:ensure&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;:custom&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;reverse-im-input-methods&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;russian-computer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;:config&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;reverse-im-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;recentf-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-set-key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;kbd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;C-x C-r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;recentf-open-files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For me, that doesn't look too complicated. For Vim I add the color scheme, add a status line, and a soft word wrap:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;syntax&lt;/span&gt; enable
&lt;span class="k"&gt;colorscheme&lt;/span&gt; monokai
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;wrap&lt;/span&gt; &lt;span class="nb"&gt;linebreak&lt;/span&gt; &lt;span class="nb"&gt;nolist&lt;/span&gt;
&lt;span class="k"&gt;call&lt;/span&gt; plug#begin&lt;span class="p"&gt;()&lt;/span&gt;
  Plug &lt;span class="s1"&gt;&amp;#39;itchyny/lightline.vim&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;call&lt;/span&gt; plug#&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To fix a bug with the status line and add mapping to Cyrillic keys (not to switch to Cyrillic in normal mode) we need to add this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;laststatus&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt; 
&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;langmap&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯ;ABCDEFGHIJKLMNOPQRSTUVWXYZ&lt;span class="p"&gt;,&lt;/span&gt;фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As Vim is launched in some terminals, I specify the font in the config for the terminal. Regarding Emacs, first, we need to switch off the menu (it's accessible with F10), and the scrollbar and switch off the window decoration to save some space. I also switch off the startup screen as it becomes annoying after a few launches. I turn on soft word wrap and make Dired, the file manager inside Emacs, look a bit prettier.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;scroll-bar-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;tool-bar-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;menu-bar-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;default-frame-alist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;undecorated&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;inhibit-startup-screen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;dired-listing-switches&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;-laGh1v&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;setq-default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;word-wrap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To add a theme and specify a custom font set I do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;sentence-end-double-space&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;nil&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;custom-set-faces&lt;/span&gt;
&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:family&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Source Code Pro&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:foundry&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ADBO&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:slant&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;normal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:weight&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;semi-bold&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:height&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;132&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;:width&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;custom-theme-load-path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;~/.emacs.d/themes/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;load-theme&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;monokai&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I don't specify the font face manually, instead, I choose it from the menu and Emacs adds it to the config. For some reason Emacs thinks that sentences are divided using double spaces, so the first line is to fix it to be able to jump between sentences with Alt-E and Alt-A.&lt;/p&gt;
&lt;p&gt;I use a separate &lt;a href="https://github.com/emacsmirror/reverse-im"&gt;reverse-im module&lt;/a&gt; to make hotkeys work with Cyrillic keymap, first, we need to add repositories and install 'package':&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;package&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-to-list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;#39;package-archives&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;melpa&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://melpa.org/packages/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;use-package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;reverse-im&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;:ensure&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;:custom&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;reverse-im-input-methods&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;russian-computer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="ss"&gt;:config&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;reverse-im-mode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Markdown&lt;/h2&gt;
&lt;p&gt;Regarding Markdown, let's take Vim first:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Snippets allow you to insert markup for almost everything (links, images, headers, etc.)&lt;/li&gt;
&lt;li&gt;Vim-markdown allows folding, insert table of contents and also have TOC inside Vim to move faster between sections!&lt;/li&gt;
&lt;li&gt;Bullets auto-insert is also available&lt;/li&gt;
&lt;li&gt;Auto table formatting&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To do this, you need to install several plugins and set conceal level:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;call&lt;/span&gt; plug#begin&lt;span class="p"&gt;()&lt;/span&gt;
  Plug &lt;span class="s1"&gt;&amp;#39;SirVer/ultisnips&amp;#39;&lt;/span&gt;
  Plug &lt;span class="s1"&gt;&amp;#39;honza/vim-snippets&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:UltiSnipsExpandTrigger&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;tab&amp;gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:UltiSnipsJumpForwardTrigger&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;c-b&amp;gt;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:UltiSnipsJumpBackwardTrigger&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;c-z&amp;gt;&amp;quot;&lt;/span&gt;

  Plug &lt;span class="s1"&gt;&amp;#39;plasticboy/vim-markdown&amp;#39;&lt;/span&gt;
  Plug &lt;span class="s1"&gt;&amp;#39;godlygeek/tabular&amp;#39;&lt;/span&gt;
  &lt;span class="k"&gt;call&lt;/span&gt; plug#&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;conceallevel&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Snippets are quite useful and some people don't get their full capabilities. For a link, for example, I enter '[c' and then Tab in Insert mode, then enter the name for the link, press Ctrl-B and then enter the URL. I also can get back to the link name with Ctrl-Z in Insert mode. Well, it doesn't work so well with links inside tables. :( Concealing also breaks formatting sometimes, like you have plenty of whitespace at the end of the line and some characters on the next line.&lt;/p&gt;
&lt;p&gt;Emacs allows it all this plus a bit more:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It can automatically insert numbered list as well&lt;/li&gt;
&lt;li&gt;Links concealing is a bit better&lt;/li&gt;
&lt;li&gt;A few more functions to work with headers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of this is done in the Markdown package. Emacs adds lines to config itself, you need to run a package install command. I like Emacs' documentation a bit more because it's embedded into the code. In Vim you have to look at the actual snippet code, and in Emacs, I do Ctrl-H M to view all the up-to-date documentation for Markdown mode.&lt;/p&gt;
&lt;h2&gt;HTML&lt;/h2&gt;
&lt;p&gt;It's simple, you need to insert tags, lots of tags. Emmet is available for Emacs, as for Vim. With Emmet you can enter ul&amp;gt;li*3 to insert an unordered list with 3 bullets. Emmet is a bit overkill for me, so I use embedded HTML mode in Emacs and snippets in Vim to insert paragraphs and some lists. For example, in Vim this could be 'p' and Tab, in Emacs Ctrl-C and then Enter. The workflow after that can be different, as in the terminal I can use xclip to copy a file to the buffer, in Vim you can do ':%y+' and in Emacs, you can do Ctrl-X H and then Alt+W. &lt;/p&gt;
&lt;h2&gt;Taking notes&lt;/h2&gt;
&lt;p&gt;Org mode generally is a reason to use and learn Emacs, and it's great. At first, I didn't get it so I started with VimWiki. I had to leave it towards Emacs for several reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Working with links in convenient ways matters&lt;/li&gt;
&lt;li&gt;Big headers help a lot&lt;/li&gt;
&lt;li&gt;I know that I can have more dimensions: categories and tags&lt;/li&gt;
&lt;li&gt;Lots of tools to work with org files also matter&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Org mode is embedded, so you can just open an .org file and start experimenting!&lt;/p&gt;
&lt;p&gt;For Vim you are welcome to try Orgmode.nvim and Neorg, they look promising, but I didn't try them. You can also use vim-markdown for note-taking, you'll be able to jump between files using links or preview HTML in a browser.&lt;/p&gt;
&lt;h2&gt;Vim advanced mode&lt;/h2&gt;
&lt;p&gt;The 'standard' Vim use is Gnome Terminal + Vim or GVim. What I call 'advanced' mode is a terminal multiplexer like Tmux + terminal (I prefer Alacritty) + Vim. It's a separate topic, how to set it up and use it, I'll just mention what it &lt;strong&gt;allows&lt;/strong&gt; you to do:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have a terminal pane and a Vim pane inside one window and use Tmux to switch between windows&lt;/li&gt;
&lt;li&gt;Have pre-defined sessions with pre-defined windows and panes&lt;/li&gt;
&lt;li&gt;Copy and paste a text from the terminal using the keyboard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some people say that it's less disturbing to have everything in a terminal, as you don't switch the context. Just try it and decide for yourself. :)&lt;/p&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;Emacs is my choice at the moment because my acid test revealed that I can do more and get stressed less with Emacs. For example, I work a lot with links, and my workflow is the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Type some text&lt;/li&gt;
&lt;li&gt;Decide that some words should become a link, so I select those words&lt;/li&gt;
&lt;li&gt;Insert link target from the clipboard, Emacs just inserts all the markup&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I suffer to do the same with snippets. I had a lot of mistakes with link markup, so I prefer the Emacs way to work with them as it's error-proof. Besides, Org mode was developed in Emacs and it's polished, and Emacs has a lot of export functions which saved a ton of time for me. I learned about Orgmode.nvim and Neorg doing quick research right before writing this article, they seem to be still under development, and I had no reason to switch from Emacs. Although I wrote this particular article in Vim just to be sure that my .vimrc works. :)&lt;/p&gt;
&lt;p&gt;Update: I've found a way to get almost the same in Vim finally: &lt;a href="https://www.reddit.com/r/neovim/comments/tqgcpw/comment/i2h9ivs/?utm_source=reddit&amp;amp;utm_medium=web2x&amp;amp;context=3"&gt;UltiSnips + Visual mode&lt;/a&gt;.&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category><category term="productivity"></category><category term="vim"></category><category term="emacs"></category></entry><entry><title>Cooking Linux the right way: use cases the Unix-way</title><link href="https://en.kovchinnikov.info/2022-09-linux-4.html" rel="alternate"></link><published>2022-09-28T11:20:00+02:00</published><updated>2022-09-28T11:20:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2022-09-28:/2022-09-linux-4.html</id><summary type="html">&lt;p&gt;Getting more productive with a native Linux environment&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;In the case of modern Linux you have several options to choose your use case:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows-like (I don't mean it's bad), when you manipulate normal GUI windows using mouse and hotkeys&lt;/li&gt;
&lt;li&gt;Terminal-based, when you do everything in the command line and CLI apps&lt;/li&gt;
&lt;li&gt;Tiled, when you have GUI windows, but they are tiled or maximized and managed using hotkeys only&lt;/li&gt;
&lt;li&gt;Emacs-based, when you try to do inside Emacs as much as you like and Emacs manages its windows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You are welcome to use a mix, I do it, by the way. It's the question of comfort and your use cases. For example, when I edit audio, I use GUI apps only and I prefer a Windows-like approach, but when I edit the text I use as Emacs, as a command line in the Terminal. You are welcome to mix and try, you even don't need the virtual machine for that because for major distributions everything works well on the same installation. What's important, is that you &lt;strong&gt;have a choice&lt;/strong&gt;. In the Linux world, however, those who like tiled environments speak more for some reason, but it doesn't reflect the percentage of users, who use each approach on the desktop. OK, let's move on.&lt;/p&gt;
&lt;h2&gt;Windows-like&lt;/h2&gt;
&lt;p&gt;That's what traditional desktop environments are about: windows, windows titles, you move them and resize them with the mouse. What I like about Gnome, is that it has some tiling capabilities, I mean you can divide the screen into two parts, and sometimes it's useful. But I use a notebook with a 13-inch display, if you have a bigger screen you may need to tile more than two apps. So, it becomes a pain. I also like to work on one task at a time and a thus bigger screen will not fix my issues. :)&lt;/p&gt;
&lt;p&gt;The problem with a Windows-like environment is context switching, all the programs look different and the brain doesn't adapt well to it. You lose time and concentration, but it may be not so critical for you. It's also a productivity loss when you take an arm off the keyboard and start looking for a menu item with a mouse.&lt;/p&gt;
&lt;p&gt;Regarding particular desktop environments, I don't like KDE, because it had memory leakage problems. XFCE is supposed to be a lightweight Gnome version, but it becomes almost as heavyweight as Gnome, but lacking some important features. So, choosing XFCE or Gnome is a matter of taste and functionality. For example, XFCE doesn't support Wayland at the moment and Wayland &lt;strong&gt;is&lt;/strong&gt; good. If you need to be lean with your system resources, you can try LXDE or LXQt, as they have maximum functions with a minimal CPU and memory footprint. It's also for X Windows system, regretfully.&lt;/p&gt;
&lt;p&gt;In a Windows-like environment, you can use workspace and hotkeys to switch between them. To become more productive with my workspace, I use the following rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A fixed number of workspaces (3), each with a specific purpose&lt;/li&gt;
&lt;li&gt;Launch most apps on login automatically and place them on workspaces automatically as well&lt;/li&gt;
&lt;li&gt;Do not move apps between workspaces&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Be sure to use hotkeys everywhere you can, because a keyboard is a lot faster than a mouse. :)&lt;/p&gt;
&lt;h2&gt;Terminal&lt;/h2&gt;
&lt;p&gt;This is an extreme environment because it's text only and not so comfortable regarding user experience. Most terminal emulators lack GPU acceleration, so they lack smooth rendering. As everything is controlled with a keyboard and resource usage is minimal, it's the fastest way to get the job done if you have CLI apps only. No context switching, by the way. It becomes so comfortable over time, that you tend to evade GUI apps. But beware, people use Twitter and send images and links inside emails. :)&lt;/p&gt;
&lt;p&gt;It's a good idea to master the command line anyway for the following reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some things can be done significantly faster&lt;/li&gt;
&lt;li&gt;Some things in Linux still can't be done using GUI&lt;/li&gt;
&lt;li&gt;If a remote server has SSH access only, your options are limited to CLI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The next (but in fact really old) chapter in CLI evolution is terminal multiplexors like Screen and Tmux. They allow you to have windows (and tile them) and sessions, so you can save and restore several programs with some files opened for a specific use case, but only if they are CLI. :) Vim or NeoVim is a great CLI program, really a handy editor. You may want to change the color scheme or some key bindings, but generally, when you get its commands at your fingertips, it becomes extremely comfortable. It has a file manager and some programs try to use Vim bindings, even Chrome extensions. And in terminal font sizes are always the same, it matters when you work a lot at a computer, reducing fatigue.&lt;/p&gt;
&lt;h2&gt;Tiled&lt;/h2&gt;
&lt;p&gt;A tiled environment is good for big screens and looking at several apps at the same time. I don't have these use cases, so I just use maximized apps. Tiled environments have several drawbacks for me, though:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tiling window managers don't support Wyland&lt;/li&gt;
&lt;li&gt;They are window managers, so they lack DE features: hardware controls and small useful programs I need&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;People say that you can invest your time to get a more productive environment, you can also save configs to the cloud and install them fast on a new system. Well, for me it looks like you are studying ergonomics yourself and I don't consider it a good investment of time. I also can't understand why to set up things like hardware controls, that are present in the default Gnome.&lt;/p&gt;
&lt;h2&gt;Emacs&lt;/h2&gt;
&lt;p&gt;What do you expect from a text editor? Nice hotkeys, syntax highlighting, fast editing, maybe macros support. Emacs is not a text editor at all, it is an "elisp code execution environment"&amp;nbsp;(C). That means that any logic within Emacs can be customized and any program can be written inside Emacs. By the way, Emacs has a text-only version, but it's slow and sometimes it behaves strangely. Links insertion for me is a critical case: I'd like to have markup done automatically for links. Emacs does this in a series of questions like URL, link text, and link title. Vim wiki, for example, just inserts some markup and you move left or right to make a link actually. Emacs is really old and when you ask for anything text-based it's usually inside Emacs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Markdown mode&lt;/li&gt;
&lt;li&gt;HTML mode&lt;/li&gt;
&lt;li&gt;Org-mode is like an internal wiki, which you can export to any format&lt;/li&gt;
&lt;li&gt;Split screen mode when you need to translate the text&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, in any &lt;strong&gt;mode&lt;/strong&gt; Emacs behaves differently and the same events trigger different functions, and... it's so nice! At first, I was dissatisfied that the &lt;em&gt;editor&lt;/em&gt; does something for me, like closing brackets. But then I relaxed and liked it because it works and it does the most important things in every mode.&lt;/p&gt;
&lt;p&gt;And yes, Emacs has windows (called buffers) inside and a file manager. You can also use its terminal emulator, RSS reader, and Telegram client, but for me, it's overkill. For example, I write an article for this blog, run the update command, then several git commands in the terminal and I don't experience problems switching between Emacs and Terminal. Besides, Gnome Terminal is really good. :) &lt;/p&gt;
&lt;p&gt;Just as a conclusion for Emacs it's worth trying and I'll mention a few essential customizations to an empty Emacs config file in the next article.&lt;/p&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;Just to sum up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use windows-like environments for graphics-intensive programs&lt;/li&gt;
&lt;li&gt;Use a terminal environment if all your programs are CLI&lt;/li&gt;
&lt;li&gt;Use a tiled environment if you need to look at several activities at once&lt;/li&gt;
&lt;li&gt;Use Emacs if you need more automation and customization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's move to Emacs then. :)&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category><category term="productivity"></category></entry><entry><title>Cooking Linux the right way: Gnome setup</title><link href="https://en.kovchinnikov.info/2022-09-linux-3.html" rel="alternate"></link><published>2022-09-27T21:32:00+02:00</published><updated>2022-09-27T21:32:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2022-09-27:/2022-09-linux-3.html</id><summary type="html">&lt;p&gt;Revealing Gnome potential&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;In this article we'll go through the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Setting up network accounts&lt;/li&gt;
&lt;li&gt;Enhancing performance&lt;/li&gt;
&lt;li&gt;Starting apps automatically&lt;/li&gt;
&lt;li&gt;Placing apps automatically&lt;/li&gt;
&lt;li&gt;Minor tuning: tray, clipboard, and desktop indicator&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Great, let's do it!&lt;/p&gt;
&lt;h2&gt;Setting up network accounts&lt;/h2&gt;
&lt;p&gt;If you have a Google account, you may do it the old way: set your Gmail account in an email program or use a web interface for Gmail and Google Drive. Instead, you can do it once in Settings &amp;ndash; Online Accounts. After that, the following will happen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compatible email programs like Geary and Evolution will show your mail&lt;/li&gt;
&lt;li&gt;Nautilus will show your Google Drive as a folder&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More than that, if you have another email account, Gnome-way is to add it in Online Accounts as well.&lt;/p&gt;
&lt;p&gt;By the way, Deja dup backup tool will require authorization to use Google Drive, but it works.&lt;/p&gt;
&lt;h2&gt;Enhancing performance&lt;/h2&gt;
&lt;p&gt;The main trick here is to turn off animation. In Gnome version 2.42 it can be done in the Accessibility tab (I also turn on the large text setting there), before that it was in Gnome Tweaks.&lt;/p&gt;
&lt;p&gt;You can also visit the Power tab in Settings to check power mode &amp;ndash; if you need performance, you can turn it on there.&lt;/p&gt;
&lt;h2&gt;Starting apps automatically&lt;/h2&gt;
&lt;p&gt;In my opinion, starting apps manually at a system startup is a waste of time. I use gnome-tweak to start apps I need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Terminal&lt;/li&gt;
&lt;li&gt;Nautilus&lt;/li&gt;
&lt;li&gt;Chrome&lt;/li&gt;
&lt;li&gt;Telegram&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Placing apps automatically&lt;/h2&gt;
&lt;p&gt;The next step is to use workspaces. I limit the number of workspaces to three not to get confused (Settings &amp;ndash; Multitasking) and also turn on the setting 'Application Switching &amp;ndash; Include applications from the current workspace only'. Then you can install &lt;a href="https://extensions.gnome.org/extension/16/auto-move-windows/"&gt;Auto Move Windows&lt;/a&gt; extension and set auto-started apps, for example, like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Terminal + text editor&lt;/li&gt;
&lt;li&gt;Nautilus + Chrome&lt;/li&gt;
&lt;li&gt;Telegram&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Minor tuning: tray, clipboard, and desktop indicator&lt;/h2&gt;
&lt;p&gt;The tray was required by Telegram and Skype, now it's used by Skype only. So, I still prefer to have a tray not to look for Skype when I need it and &lt;a href="https://extensions.gnome.org/extension/2890/tray-icons-reloaded/"&gt;Tray Icons: Reloaded&lt;/a&gt; extension does it.&lt;/p&gt;
&lt;p&gt;Clipboard history is essential when you do a lot of copy-paste actions, so extensions like &lt;a href="https://extensions.gnome.org/extension/4422/gnome-clipboard/"&gt;Gnome Clipboard&lt;/a&gt; allow you to choose what to paste. I'd rank this number 1 for productivity because instead of switching multiple times between the apps it allows me to copy multiple links, switch to another app and paste anything I want. By the way, two hints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can select the path for copy-paste in Nautilus hitting Ctrl+L.&lt;/li&gt;
&lt;li&gt;Copy-paste works in the Terminal with Ctrl+Shift+[С|V] by default.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also like to have a &lt;a href="https://extensions.gnome.org/extension/21/workspace-indicator/"&gt;workspace indicator&lt;/a&gt; whether it's visual or just a number.&lt;/p&gt;
&lt;p&gt;That's all, I wouldn't spoil Gnome too much with extensions when they begin to conflict with each other, consume memory, and crash. :) &lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I used this setup for heavy-duty copy-pasting at work, and it works fine for me. I even do not bother that the clipboard extension doesn't have a hotkey. For the rest just use hotkeys and everything will be fine. :) If you need more productivity, stay tuned for terminal and text editors setup.&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category><category term="productivity"></category></entry><entry><title>Cooking Linux the right way: installing the right programs the right way</title><link href="https://en.kovchinnikov.info/2022-09-linux-2.html" rel="alternate"></link><published>2022-09-27T16:37:00+02:00</published><updated>2022-09-27T16:37:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2022-09-27:/2022-09-linux-2.html</id><summary type="html">&lt;p&gt;Installing programs without religious prejudice&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;Again, I'm aiming at a "general desktop Linux user", which is non-existent by default, but if you use a computer, sooner or later you use the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some desktop environment&lt;/li&gt;
&lt;li&gt;A browser&lt;/li&gt;
&lt;li&gt;A messaging app&lt;/li&gt;
&lt;li&gt;A text editor&lt;/li&gt;
&lt;li&gt;Office apps to edit rich format texts, presentations, spreadsheets&lt;/li&gt;
&lt;li&gt;A backups program&lt;/li&gt;
&lt;li&gt;A minimal image editing program (crop and resize)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Video, photo, and audio editors are considered special for each case, so nothing to see here. :) The same for IDEs and games.&lt;/p&gt;
&lt;p&gt;So, the questions you probably have are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What to install&lt;/li&gt;
&lt;li&gt;How to install&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What to install&lt;/h2&gt;
&lt;p&gt;Regarding &lt;strong&gt;the desktop environments&lt;/strong&gt; I use Gnome and I'd recommend it for the best desktop experience. The only exception could be a PC with limited resources and I'd rather use LXDE (LXQt) for that. Gnome is the one to support Wayland, and Wayland is great for the desktop vs. X Window system. The other Gnome 'pros' are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Great look and feel&lt;/li&gt;
&lt;li&gt;Adequate resource usage&lt;/li&gt;
&lt;li&gt;Lots of integrated tools and programs (notably screenshots, file manager, VPN client)&lt;/li&gt;
&lt;li&gt;Great controls for hardware (battery, Bluetooth, sound, and brightness)&lt;/li&gt;
&lt;li&gt;Accessibility options&lt;/li&gt;
&lt;li&gt;Gnome extensions!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It has a great terminal and a functional file manager, so the tuning you need here is gnome-tweaks and extensions. I'll cover Gnome setup in another article because it's where productivity matters.&lt;/p&gt;
&lt;p&gt;Chrome became a de-facto standard for &lt;strong&gt;web browsing&lt;/strong&gt;, so the same issue here: there are alternatives, but they all have some drawbacks in terms of speed and website compatibility. You could use Chromium to be Google-free, but then you need at least to add some password storage extension.&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;messaging&lt;/strong&gt; you could use Slack or Telegram. I'd not recommend web clients, as they are less functional. Some users may require the bad old Skype, it's OK.&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;text editing&lt;/strong&gt; the choice is wide, but to unleash the true Linux power (see the next article) you could install Vim and Emacs. They are great, I used both, although I'm writing this text inside Emacs. I had some problems with big texts in Geany, so I'd rather install some Electron-powered modern text editor if you edit plaintext-based files often. Even Visual Studio Code would do. :)&lt;/p&gt;
&lt;p&gt;You are welcome to &lt;strong&gt;edit office documents&lt;/strong&gt; in Google Docs, but if you need to edit something fast or view the document on the local disk it's handy to have something:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WPS is recommended, I tested it and liked the most for compatibility&lt;/li&gt;
&lt;li&gt;OnlyOffice is limited if you use office features heavily&lt;/li&gt;
&lt;li&gt;LibreOffice sometimes does the things others can't, so I still have it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By the way, don't forget to install MS TTF core fonts to display presentations and rich format documents as it's intended to be.&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;backups&lt;/strong&gt; I use Deja Dup, it saved my digital life twice already: in cases of accidental folder deletion and HDD failure. &lt;/p&gt;
&lt;p&gt;To &lt;strong&gt;edit images&lt;/strong&gt; quickly (screenshots and memes) I use gThumb. Maybe there's a better alternative, I'm just quite satisfied with it.&lt;/p&gt;
&lt;p&gt;You can also install VLC as it has all the codecs for &lt;strong&gt;playing video&lt;/strong&gt; from the local drive, although most of the videos are online nowadays.&lt;/p&gt;
&lt;h2&gt;How to install&lt;/h2&gt;
&lt;p&gt;To install programs properly we need to put them into two baskets: (1) when new features are critical and (2) when they are not. For office applications and messaging I'd say that new features are critical because it's all about compatibility. So the approaches are different for each category: we install the first category using flatpak, as it's isolated and won't ruin the system; it's also updated well. And we use a standard package manager (apt for Debian-based systems and dnf for RedHat-based) for all the rest packages to minimize resource consumption.&lt;/p&gt;
&lt;p&gt;Don't forget to &lt;a href="https://flatpak.org/setup/"&gt;add a flatpak catalog&lt;/a&gt; (or install flatpak first if it's not present). After that, we can install packages using instructions on &lt;a href="https://flathub.org/home"&gt;flathub page&lt;/a&gt;. So, we install the following using flatpak:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slack&lt;/li&gt;
&lt;li&gt;Telegram&lt;/li&gt;
&lt;li&gt;WPS Office&lt;/li&gt;
&lt;li&gt;Skype (in case you need it)&lt;/li&gt;
&lt;li&gt;LibreOffice&lt;/li&gt;
&lt;li&gt;OnlyOffice&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can combine it in one command, just be sure to type the program names right. For the rest of the programs we do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo [apt|dnf] install gnome-tweaks vim emacs deja-dup gthumb vlc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Chrome is easy to download and install from the official website. That's all for the programs installations, stay tuned for Gnome and core editors setup.&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category><category term="productivity"></category></entry><entry><title>Cooking Linux the right way: choosing the distribution</title><link href="https://en.kovchinnikov.info/2022-09-linux-1.html" rel="alternate"></link><published>2022-09-15T12:58:00+02:00</published><updated>2022-09-15T12:58:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2022-09-15:/2022-09-linux-1.html</id><summary type="html">&lt;p&gt;Someone has to write the truth on how to use Linux&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Preface&lt;/h2&gt;
&lt;p&gt;Linux is great for a server, but it's still a challenge for a desktop. The server requires stability and minimal resource usage, but does anybody know what the desktop requires? I used Linux at home for 20 years and I used it at work for several months, so in my viewpoint the following is important:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hardware support; you &lt;strong&gt;can&lt;/strong&gt; know beforehand, whether the hardware is supported and choose the compatible hardware; so, it's better to have a wider choice!&lt;/li&gt;
&lt;li&gt;Software availability: you &lt;strong&gt;will not know&lt;/strong&gt; beforehand, what software you need for the desktop;&lt;/li&gt;
&lt;li&gt;Known issues and solutions database aka community support and documentation availability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you value your time and prefer to get the job done (whether it's a hobby or a payable job) vs. fixing and tuning, according to my experience deb or rpm package formats are preferable. Hardware manufacturers distribute drivers and accompanying software in these formats, and commercial software manufacturers also prefer them. Some software is available in deb and not available in rpm and vice versa, but on average you can find a package you need in these two formats. Arch and Manjaro users suffer here, but you are welcome to install these in a virtual environment and play as much as you like.&lt;/p&gt;
&lt;p&gt;The software availability issue is &lt;em&gt;almost&lt;/em&gt; fixed with the help of Flatpak and &lt;a href="https://flathub.org/"&gt;Flathub&lt;/a&gt;: you can have fresh software on any distribution now, but for a limited number of programs. &lt;/p&gt;
&lt;h2&gt;The menu&lt;/h2&gt;
&lt;p&gt;Regarding the list of distributions I'd list the following:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package format&lt;/th&gt;
&lt;th&gt;Stable&lt;/th&gt;
&lt;th&gt;Unstable&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;rpm&lt;/td&gt;
&lt;td&gt;&lt;a href="https://rockylinux.org/"&gt;Rocky Linux&lt;/a&gt; (CentOS)&lt;/td&gt;
&lt;td&gt;&lt;a href="https://getfedora.org/"&gt;Fedora&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;deb&lt;/td&gt;
&lt;td&gt;&lt;a href="https://www.debian.org/"&gt;Debian&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ubuntu.com/"&gt;Ubuntu&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I tried 3 of 4: Fedora as my main system at home, Ubuntu at work, and Debian for a few months at home. But first, a few words concering the 'stability'. Yes, it's about the number of bugs, which lead to system faults and excessive resource consumption, but 'stable' distributions are also less user-friendly. Let's go through the alternatives.&lt;/p&gt;
&lt;h2&gt;Rocky Linux&lt;/h2&gt;
&lt;p&gt;It's a successor for CentOS, which was very popular among scientists because scientists need to get the job done, they also need stability and they need it cheap. I can't say anything bad about it, maybe it doesn't have the latest software like Gnome, which is important for desktop users. Debian &lt;a href="https://wiki.debian.org/DontBreakDebian#Don.27t_suffer_from_Shiny_New_Stuff_Syndrome"&gt;warns us&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don't suffer from Shiny New Stuff Syndrome&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I can fully admit that when you need to just get the job done, new shiny animations matter less than stability. With Rocky Linux, you can also fully benefit from &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/"&gt;Red Hat Linux documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I just don't need this stability at home, so why not be on the edge with Fedora?&lt;/p&gt;
&lt;h2&gt;Debian&lt;/h2&gt;
&lt;p&gt;Debian is great for servers, I tried it at home and it lacks hardware support and some essential desktop features, like VPN support in Network Manager. It requires more effort in cases that require no effort in Fedora and Ubuntu. When my hard disk died, I decided to return to Fedora. I liked Debian for stability and low resource usage, but small desktop issues are disturbing and hard to fix. I mean suspend mode works not so well, wi-fi needs time to connect after suspend.&lt;/p&gt;
&lt;p&gt;In terms of hardware support, some hardware manufacturers tend to have old software, so the software for my MFD worked in Debian, although it didn't work in Ubuntu and Fedora.&lt;/p&gt;
&lt;p&gt;My idea was to combine Debian stability with the latest software versions from Flatpak, but for the desktop that wasn't enough, regretfully. You are trying to do desktop things on a server.&lt;/p&gt;
&lt;h2&gt;Ubuntu&lt;/h2&gt;
&lt;p&gt;Ubuntu works, but it seems that it was designed by marketing managers instead of engineers. It's heavily patched and these patches bring more bugs: more resource usage, less speed, and stability. It feels like windows if you missed it. I didn't get it, I tried to fix it by installing 'vanilla' software versions. Yes, it worked, but I didn't like it. For me, it seems that some solutions in Ubuntu are dead: Snap and Unity. At the end of the day, Ubuntu takes solutions from Fedora: Gnome, pipewire audio system. With Ubuntu, you just wait for technologies to migrate from Fedora. Still, some bugs are fixed and Ubuntu generally is more stable, than Fedora.&lt;/p&gt;
&lt;p&gt;Besides, I consider the deb package format outdated, I had to fix corrupted dependencies several times.&lt;/p&gt;
&lt;h2&gt;Fedora&lt;/h2&gt;
&lt;p&gt;Fedora's way to fix things is like "let's invent another system". We don't like pulseaudio, let's make pipewire. We don't like deb, let's make rpm. We don't like yum, let's make dnf. It works in major versions, but it brings lots of bugs in the beginning. The kernel is so fresh, that it breaks hardware compatibility: during three years I had two severe bugs, last time wi-fi stopped working. And this high pace of progress is not going to stop. Too fresh software? We have a new answer: &lt;a href="https://silverblue.fedoraproject.org/"&gt;immutable linux&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Regarding community it's smaller than Ubuntu's one, so sometimes you have to look for answers on Ubuntu (or Arch) wiki and forums.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;It's hard to recommend anything from the list, Fedora requires less effort after installation and works well for me. If you read this, it means that my wi-fi card worked. :) We'll look at a minimal software list for any distribution and apps to unleash the true Linux power in the next episodes, stay tuned!&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category><category term="productivity"></category></entry><entry><title>Obsidian And Others</title><link href="https://en.kovchinnikov.info/2022-09-obsidian-and-others.html" rel="alternate"></link><published>2022-09-14T21:56:00+02:00</published><updated>2022-09-14T21:56:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2022-09-14:/2022-09-obsidian-and-others.html</id><summary type="html">&lt;p&gt;When it smells like a knowledge base, I can't just pass by&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nothing special, just everyone on YouTube admires Obsidian so much to manage knowledge and notes. The following table may be useful for someone. I got sick and recovered from personal wiki using Dokiwiki. And a few thoughts regarding these programs are below the table.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Functions&lt;/th&gt;
&lt;th&gt;&lt;a href="https://obsidian.md/"&gt;Obsidian&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://logseq.com/"&gt;Logseq&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;Emacs &lt;a href="https://www.orgroam.com/"&gt;org roam&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/vimwiki/vimwiki"&gt;Vimwiki&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.dokuwiki.org/dokuwiki"&gt;Dokuwiki&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Tasks&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Calendar&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Diary&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relationship diagram&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Opensource&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Teamwork&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Size&lt;/td&gt;
&lt;td&gt;221 Mb&lt;/td&gt;
&lt;td&gt;190 Mb&lt;/td&gt;
&lt;td&gt;305 kb&lt;/td&gt;
&lt;td&gt;6,1 Mb&lt;/td&gt;
&lt;td&gt;32 Mb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Markdown support&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Plugins&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Zettelkasten&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/michal-h21/vim-zettel"&gt;Yes&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If you are still going to use Obsidian, just a reminder:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's not opensource, so nobody can say, where this app sends your data to&lt;/li&gt;
&lt;li&gt;There is a service to publish your notes, but it's not the same as a web app for team notes; it works vice versa: a web app (Dokuwiki, for example) can be installed on a local computer, as on a server but in personal mode&lt;/li&gt;
&lt;li&gt;I didn't get the idea of the relationship diagram&lt;/li&gt;
&lt;li&gt;Dokuwiki is just an example, some people recommend &lt;a href="https://tiddlywiki.com/"&gt;TiddlyWiki&lt;/a&gt; if you need Zettelkasten exactly&lt;/li&gt;
&lt;li&gt;Vimwiki and Emacs can help a lot with Markdown files: adding links, tables, and lists&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'd also recommend the services with backups included vs. personal note-taking programs.&lt;/p&gt;</content><category term="blog"></category><category term="linux"></category><category term="productivity"></category><category term="emacs"></category></entry><entry><title>Germany Transport System</title><link href="https://en.kovchinnikov.info/2022-09-germany-transport.html" rel="alternate"></link><published>2022-09-12T23:14:00+02:00</published><updated>2022-09-12T23:14:00+02:00</updated><author><name>Konstantin Ovchinnikov</name></author><id>tag:en.kovchinnikov.info,2022-09-12:/2022-09-germany-transport.html</id><summary type="html">&lt;p&gt;Hacking through transport associations and Deutche Bahn&lt;/p&gt;</summary><content type="html">&lt;p&gt;German trains, buses, and routes system is rather specific:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trains (Deutsche Bahn, further DB) have complicated tariffs&lt;/li&gt;
&lt;li&gt;Buses consist of independent associations, each of them has its prices and conditions&lt;/li&gt;
&lt;li&gt;Without mobile apps, which update routes in real-time, it's hard to get somewhere&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, let's analyze these issues:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How the transport system works in Germany&lt;/li&gt;
&lt;li&gt;How to find prices for buses in a particular region&lt;/li&gt;
&lt;li&gt;What mobile apps to use&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I spent 3 hours of my own time, it was quite amusing.&lt;/p&gt;
&lt;h2&gt;How the transport system works in Germany&lt;/h2&gt;
&lt;p&gt;It's quite clear with the railways: there are suburban trains and fast intercity trains (IC and others). Faster trains cost more, and suburban trains are cheaper. For example, the DB app has a setting "show our best prices" &amp;ndash; most likely, it will use suburban trains and buses (the price of buses is not counted in DB apps, by the way).&lt;/p&gt;
&lt;p&gt;I found only &lt;a href="https://en.wikipedia.org/wiki/List_of_German_transport_associations"&gt;one picture&lt;/a&gt; with the bus associations, which only &lt;strong&gt;approximately&lt;/strong&gt; shows the location of each association.&lt;/p&gt;
&lt;p&gt;There are zones inside each transport association, ticket price will depend on the number of zones you cross: the further you get = the more you pay. If you buy a ticket for 5 zones, but ride 6, it's a violation. Besides, each association has travel cards for a week and a month. The tickets should be sold in machines and on the buses (from the driver), but in the worst case, you can buy tickets only on the buses and only for cash. Advanced associations have their mobile apps, and less advanced have a website with tariffs only.&lt;/p&gt;
&lt;p&gt;There was an experiment in the summer of 2022: a travel card for all suburban trains and buses for 9 euros. It made the rides cheaper, more than that, it made it easier to plan the trip and calculate its cost. The experiment is over, it will not be continued, and travel cards are introduced in some regions.&lt;/p&gt;
&lt;h2&gt;How to find prices for buses in a particular region&lt;/h2&gt;
&lt;p&gt;To learn how to buy a ticket, how much the tickets cost, and what tickets are available, you need to find a particular transport association for a region. The algorithm is (approximately) the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Find the name of the association on the bus or on the station, often the title is large.&lt;/li&gt;
&lt;li&gt;Find which region the town belongs to and find the name of the association by the name of the region, like &lt;a href="https://www.bus-clp.de"&gt;VGC&lt;/a&gt; for Cloppenburg.&lt;/li&gt;
&lt;li&gt;If it didn't help, define the association using &lt;a href="https://en.wikipedia.org/wiki/List_of_German_transport_associations"&gt;the scheme&lt;/a&gt;, then visit its map and locate your town there. Thus you make sure, that your town belongs to this transport association.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After that, you can locate the website of the transport association and find all the necessary information there.&lt;/p&gt;
&lt;h2&gt;What mobile apps to use&lt;/h2&gt;
&lt;p&gt;I'll provide links to the two apps, which were sufficient for me (for Android):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/search?q=offi&amp;amp;c=apps"&gt;Offi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/search?q=db%20navigator&amp;amp;c=apps"&gt;DB Navigator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After that, we look at the app/website of a particular transport association, for example, &lt;a href="https://play.google.com/store/apps/details?id=de.hafas.android.vgv"&gt;Moobil+&lt;/a&gt; to order a minibus in the VGC zone.&lt;/p&gt;
&lt;p&gt;DB Navigator is great, except for two issues:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It plans the routes for a different time of the day, but doesn't show different routes visually on the time scale.&lt;/li&gt;
&lt;li&gt;It doesn't show local minibusses.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Offi fixes these two issues, and besides, it's updated in real-time (actual movement of a particular train). Some more optimized route variants may exist regarding the price and the trip duration, Google Maps may show them or you can ask locals. :)&lt;/p&gt;
&lt;p&gt;DB Navigator app is great, but to buy tickets you need to register... on another website. Once you've done it and have connected a payment card, you can buy tickets easily and view the trains on the route online. It's the basic level, after that you can buy discount cards and travel cards. For example, there is a ticket "any 10 days within 30 days" or a travel card for a month, but you need to search for two points. There were no offers for points I looked up.&lt;/p&gt;
&lt;p&gt;Without one of these apps, it's difficult to get somewhere. For example, trains are delayed, so instead of a train at 15:55 another train comes, you take it and go in the opposite direction.&lt;/p&gt;
&lt;p&gt;DB is worthy of a separate article, and it has some tricks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You enter several persons, and it shows beneficial offers for a particular route&lt;/li&gt;
&lt;li&gt;You can buy tickets, which are unavailable in the machines at a railway station&lt;/li&gt;
&lt;li&gt;In my experience, it's better to buy beforehand, it can be almost twice as cheaper&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Besides, machines on a railway station don't switch to English, but the app does.&lt;/p&gt;
&lt;p&gt;Please ask your questions, I have enough time for practice.&lt;/p&gt;</content><category term="blog"></category><category term="Germany"></category></entry></feed>